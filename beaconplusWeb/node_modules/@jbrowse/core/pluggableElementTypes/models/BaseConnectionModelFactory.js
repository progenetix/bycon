"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mobx_state_tree_1 = require("mobx-state-tree");
const configuration_1 = require("../../configuration");
const baseConnectionConfig_1 = __importDefault(require("./baseConnectionConfig"));
/**
 * #stateModel BaseConnectionModel
 */
function stateModelFactory(pluginManager) {
    return mobx_state_tree_1.types
        .model('Connection', {
        /**
         * #property
         */
        name: mobx_state_tree_1.types.identifier,
        /**
         * #property
         */
        tracks: mobx_state_tree_1.types.array(pluginManager.pluggableConfigSchemaType('track')),
        /**
         * #property
         */
        configuration: (0, configuration_1.ConfigurationReference)(baseConnectionConfig_1.default),
    })
        .actions(() => ({
        /**
         * #action
         */
        connect(_arg) { },
    }))
        .actions(self => ({
        afterAttach() {
            if (self.tracks.length === 0) {
                self.connect(self.configuration);
            }
        },
        /**
         * #action
         */
        addTrackConf(trackConf) {
            const length = self.tracks.push(trackConf);
            return self.tracks[length - 1];
        },
        /**
         * #action
         */
        addTrackConfs(trackConfs) {
            const length = self.tracks.push(...trackConfs);
            return self.tracks.slice(length - 1 - trackConfs.length, length - 1);
        },
        /**
         * #action
         */
        setTrackConfs(trackConfs) {
            self.tracks = (0, mobx_state_tree_1.cast)(trackConfs);
            return self.tracks;
        },
        /**
         * #action
         */
        clear() { },
    }));
}
exports.default = stateModelFactory;
