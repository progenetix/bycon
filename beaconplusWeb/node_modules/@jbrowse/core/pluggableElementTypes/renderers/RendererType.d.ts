import { ReactElement } from 'react';
import PluggableElementBase from '../PluggableElementBase';
import { AnyConfigurationSchemaType } from '../../configuration';
import { AnyReactComponentType } from '../../util';
import PluginManager from '../../PluginManager';
export type RenderProps = Record<string, unknown>;
export interface RenderResults {
    reactElement?: ReactElement;
    html?: string;
}
export default class RendererType extends PluggableElementBase {
    ReactComponent: AnyReactComponentType;
    supportsSVG: boolean;
    configSchema: AnyConfigurationSchemaType;
    pluginManager: PluginManager;
    constructor(stuff: {
        name: string;
        ReactComponent: AnyReactComponentType;
        displayName?: string;
        configSchema: AnyConfigurationSchemaType;
        pluginManager: PluginManager;
    });
    render(props: RenderProps): Promise<RenderResults>;
    /**
     * frees resources associated with the given range, session, etc.
     * optionally returns the number of data items deleted
     */
    freeResources(): number;
}
