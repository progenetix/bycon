type FilterExpression = (...args: Record<string, any>[] | any[]) => boolean;
interface Filter {
    string: string;
    expr: FilterExpression;
}
export type SerializedFilterChain = string[];
export default class SerializableFilterChain {
    filterChain: Filter[];
    constructor({ filters }: {
        filters: SerializedFilterChain;
    });
    passes(...args: any[]): boolean;
    toJSON(): {
        filters: string[];
    };
    static fromJSON(json: {
        filters: SerializedFilterChain;
    }): SerializableFilterChain;
}
export {};
