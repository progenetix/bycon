"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const mst_reflection_1 = require("../../util/mst-reflection");
const PluggableElementBase_1 = __importDefault(require("../PluggableElementBase"));
class RendererType extends PluggableElementBase_1.default {
    constructor(stuff) {
        super(stuff);
        this.supportsSVG = true;
        this.ReactComponent = stuff.ReactComponent;
        this.configSchema = stuff.configSchema;
        this.pluginManager = stuff.pluginManager;
        if (!this.ReactComponent) {
            throw new Error(`no ReactComponent defined for renderer ${this.name}`);
        }
        if (!(0, mst_reflection_1.getDefaultValue)(this.configSchema).type) {
            throw new Error(`${this.name} config schema ${this.configSchema.name} is not explicitlyTyped`);
        }
        if (!this.pluginManager) {
            throw new Error(`no plugin manager defined for renderer ${this.name}`);
        }
    }
    async render(props) {
        return {
            reactElement: react_1.default.createElement(this.ReactComponent, props, null),
        };
    }
    /**
     * frees resources associated with the given range, session, etc.
     * optionally returns the number of data items deleted
     */
    freeResources( /* specification: {} */) {
        return 0;
    }
}
exports.default = RendererType;
