"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const PluggableElementBase_1 = __importDefault(require("./PluggableElementBase"));
class AdapterType extends PluggableElementBase_1.default {
    constructor(stuff) {
        super(stuff);
        if ('AdapterClass' in stuff) {
            this.AdapterClass = stuff.AdapterClass;
            this.getAdapterClass = async () => stuff.AdapterClass;
        }
        else if ('getAdapterClass' in stuff) {
            this.getAdapterClass = stuff.getAdapterClass;
        }
        else {
            throw new Error(`no AdapterClass or getAdapterClass is defined for adapter type ${this.name}`);
        }
        this.configSchema = stuff.configSchema;
        this.adapterCapabilities = stuff.adapterCapabilities || [];
        this.adapterMetadata = stuff.adapterMetadata;
    }
}
exports.default = AdapterType;
