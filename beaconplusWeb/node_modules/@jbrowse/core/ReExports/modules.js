"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable react-refresh/only-export-components */
// this is all the stuff that the pluginManager re-exports for plugins to use
const react_1 = __importStar(require("react"));
const ReactJSXRuntime = __importStar(require("react/jsx-runtime"));
const ReactDom = __importStar(require("react-dom"));
const mobx = __importStar(require("mobx"));
const mst = __importStar(require("mobx-state-tree"));
const mxreact = __importStar(require("mobx-react"));
const mui_1 = require("tss-react/mui");
const prop_types_1 = __importDefault(require("prop-types"));
const MUIStyles = __importStar(require("@mui/material/styles"));
const MUIUtils = __importStar(require("@mui/material/utils"));
const material_1 = require("@mui/material");
const x_data_grid_1 = require("@mui/x-data-grid");
// material-ui lab
const BaseAdapterExports = __importStar(require("../data_adapters/BaseAdapter"));
const Base1DViewModel_1 = __importDefault(require("../util/Base1DViewModel"));
const pluggableElementTypes = __importStar(require("../pluggableElementTypes"));
const ViewType_1 = __importDefault(require("../pluggableElementTypes/ViewType"));
const AdapterType_1 = __importDefault(require("../pluggableElementTypes/AdapterType"));
const DisplayType_1 = __importDefault(require("../pluggableElementTypes/DisplayType"));
const TrackType_1 = __importDefault(require("../pluggableElementTypes/TrackType"));
const WidgetType_1 = __importDefault(require("../pluggableElementTypes/WidgetType"));
const pluggableElementTypeModels = __importStar(require("../pluggableElementTypes/models"));
const ServerSideRendererType = __importStar(require("../pluggableElementTypes/renderers/ServerSideRendererType"));
const CircularChordRendererType_1 = __importDefault(require("../pluggableElementTypes/renderers/CircularChordRendererType"));
const BoxRendererType = __importStar(require("../pluggableElementTypes/renderers/BoxRendererType"));
const FeatureRendererType = __importStar(require("../pluggableElementTypes/renderers/FeatureRendererType"));
const RendererType = __importStar(require("../pluggableElementTypes/renderers/RendererType"));
const Configuration = __importStar(require("../configuration"));
const Plugin_1 = __importDefault(require("../Plugin"));
const coreUi = __importStar(require("../ui"));
const coreUtil = __importStar(require("../util"));
const coreColor = __importStar(require("../util/color"));
const coreLayouts = __importStar(require("../util/layouts"));
const trackUtils = __importStar(require("../util/tracks"));
const coreIo = __importStar(require("../util/io"));
const coreMstReflection = __importStar(require("../util/mst-reflection"));
const rxjs = __importStar(require("../util/rxjs"));
const mstTypes = __importStar(require("../util/types/mst"));
const list_1 = __importDefault(require("./list"));
const Entries = {
    Accordion: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Accordion')))),
    AccordionActions: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/AccordionActions')))),
    AccordionDetails: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/AccordionDetails')))),
    Alert: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Alert')))),
    AlertTitle: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/AlertTitle')))),
    Autocomplete: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Autocomplete')))),
    Avatar: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Avatar')))),
    AvatarGroup: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/AvatarGroup')))),
    Backdrop: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Backdrop')))),
    Badge: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Badge')))),
    Box: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Box')))),
    Breadcrumbs: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Breadcrumbs')))),
    Button: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Button')))),
    ButtonGroup: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ButtonGroup')))),
    Card: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Card')))),
    CardActions: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/CardActions')))),
    CardActionArea: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/CardActionArea')))),
    CardContent: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/CardContent')))),
    CardHeader: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/CardHeader')))),
    CardMedia: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/CardMedia')))),
    CircularProgress: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/CircularProgress')))),
    Collapse: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Collapse')))),
    ClickAwayListener: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ClickAwayListener')))),
    Chip: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Chip')))),
    Checkbox: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Checkbox')))),
    Container: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Container')))),
    Dialog: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Dialog')))),
    DialogActions: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/DialogActions')))),
    DialogTitle: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/DialogTitle')))),
    DialogContent: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/DialogContent')))),
    DialogContentText: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/DialogContentText')))),
    Divider: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Divider')))),
    Drawer: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Drawer')))),
    Fab: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Fab')))),
    Fade: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Fade')))),
    FilledInput: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/FilledInput')))),
    FormLabel: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/FormLabel')))),
    FormControl: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/FormControl')))),
    FormControlLabel: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/FormControlLabel')))),
    FormHelperText: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/FormHelperText')))),
    FormGroup: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/FormGroup')))),
    Grid: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Grid')))),
    Grow: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Grow')))),
    Icon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Icon')))),
    IconButton: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/IconButton')))),
    Input: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Input')))),
    InputBase: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/InputBase')))),
    InputLabel: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/InputLabel')))),
    InputAdornment: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/InputAdornment')))),
    Link: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Link')))),
    LinearProgress: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/LinearProgress')))),
    List: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/List')))),
    ListItem: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ListItem')))),
    ListItemAvatar: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ListItemAvatar')))),
    ListItemSecondaryAction: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ListItemSecondaryAction')))),
    ListItemIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ListItemIcon')))),
    ListSubheader: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ListSubheader')))),
    ListItemText: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ListItemText')))),
    Menu: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Menu')))),
    MenuItem: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/MenuItem')))),
    MenuList: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/MenuList')))),
    Modal: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Modal')))),
    NativeSelect: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/NativeSelect')))),
    OutlinedInput: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/OutlinedInput')))),
    Pagination: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Pagination')))),
    PaginationItem: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/PaginationItem')))),
    Paper: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Paper')))),
    Popover: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Popover')))),
    Popper: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Popper')))),
    Portal: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Portal')))),
    Radio: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Radio')))),
    RadioGroup: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/RadioGroup')))),
    Rating: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Rating')))),
    ScopedCssBaseline: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ScopedCssBaseline')))),
    Select: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Select')))),
    Skeleton: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Skeleton')))),
    Slider: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Slider')))),
    Snackbar: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Snackbar')))),
    SnackbarContent: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/SnackbarContent')))),
    SpeedDial: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/SpeedDial')))),
    SpeedDialAction: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/SpeedDialAction')))),
    SpeedDialIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/SpeedDialIcon')))),
    Stack: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Stack')))),
    Step: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Step')))),
    StepButton: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/StepButton')))),
    StepConnector: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/StepConnector')))),
    StepLabel: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/StepLabel')))),
    StepIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/StepIcon')))),
    Stepper: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Stepper')))),
    SvgIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/SvgIcon')))),
    Switch: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Switch')))),
    Tab: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Tab')))),
    Table: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Table')))),
    TableBody: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/TableBody')))),
    TableCell: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/TableCell')))),
    TableContainer: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/TableContainer')))),
    TableFooter: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/TableFooter')))),
    TableHead: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/TableHead')))),
    TablePagination: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/TablePagination')))),
    TableRow: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/TableRow')))),
    TableSortLabel: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/TableSortLabel')))),
    Tabs: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Tabs')))),
    TextField: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/TextField')))),
    TextareaAutosize: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/TextareaAutosize')))),
    ToggleButton: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ToggleButton')))),
    ToggleButtonGroup: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/ToggleButtonGroup')))),
    Toolbar: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Toolbar')))),
    Tooltip: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Tooltip')))),
    Typography: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/material/Typography')))),
};
const LazyMUICore = Object.fromEntries(Object.entries(Entries).map(([key, ReactComponent]) => {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const Component = react_1.default.forwardRef((props, ref) => (react_1.default.createElement(react_1.Suspense, { fallback: null },
        react_1.default.createElement(ReactComponent, { ...props, ref: ref }))));
    Component.displayName = key;
    return [key, Component];
}));
const MaterialPrefixMUI = Object.fromEntries(Object.entries(LazyMUICore).map(([key, value]) => [
    '@material-ui/core/' + key,
    value,
]));
const MuiPrefixMUI = Object.fromEntries(Object.entries(LazyMUICore).map(([key, value]) => [
    '@mui/material/' + key,
    value,
]));
const Attributes = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./Attributes'))));
const FeatureDetails = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./FeatureDetails'))));
const BaseCard = (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./BaseCard'))));
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const DataGridEntries = {
    DataGrid: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({ default: module.DataGrid }))),
    GridActionsCellItem: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridActionsCellItem,
    }))),
    GridAddIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridAddIcon,
    }))),
    GridArrowDownwardIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridArrowDownwardIcon,
    }))),
    GridArrowUpwardIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridArrowUpwardIcon,
    }))),
    GridCellCheckboxForwardRef: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridCellCheckboxForwardRef,
    }))),
    GridCellCheckboxRenderer: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridCellCheckboxRenderer,
    }))),
    GridCheckCircleIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridCheckCircleIcon,
    }))),
    GridCheckIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridCheckIcon,
    }))),
    GridCloseIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridCloseIcon,
    }))),
    GridColumnHeaderSeparator: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridColumnHeaderSeparator,
    }))),
    GridColumnHeaderSortIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridColumnHeaderSortIcon,
    }))),
    GridColumnIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridColumnIcon,
    }))),
    GridColumnMenu: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridColumnMenu,
    }))),
    GridColumnMenuContainer: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridColumnMenuContainer,
    }))),
    GridDragIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridDragIcon,
    }))),
    GridExpandMoreIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridExpandMoreIcon,
    }))),
    GridFilterAltIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridFilterAltIcon,
    }))),
    GridFilterForm: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridFilterForm,
    }))),
    GridFilterListIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridFilterListIcon,
    }))),
    GridFilterPanel: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridFilterPanel,
    }))),
    GridFooter: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({ default: module.GridFooter }))),
    GridFooterContainer: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridFooterContainer,
    }))),
    GridHeader: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({ default: module.GridHeader }))),
    GridHeaderCheckbox: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridHeaderCheckbox,
    }))),
    GridKeyboardArrowRight: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridKeyboardArrowRight,
    }))),
    GridLoadIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridLoadIcon,
    }))),
    GridLoadingOverlay: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridLoadingOverlay,
    }))),
    GridMenuIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridMenuIcon,
    }))),
    GridMoreVertIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridMoreVertIcon,
    }))),
    GridNoRowsOverlay: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridNoRowsOverlay,
    }))),
    GridOverlay: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridOverlay,
    }))),
    GridPagination: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridPagination,
    }))),
    GridPanel: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({ default: module.GridPanel }))),
    GridPanelWrapper: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridPanelWrapper,
    }))),
    GridRemoveIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridRemoveIcon,
    }))),
    GridRoot: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({ default: module.GridRoot }))),
    GridRowCount: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridRowCount,
    }))),
    GridSaveAltIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridSaveAltIcon,
    }))),
    GridSearchIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridSearchIcon,
    }))),
    GridSelectedRowCount: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridSelectedRowCount,
    }))),
    GridSeparatorIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridSeparatorIcon,
    }))),
    GridTableRowsIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridTableRowsIcon,
    }))),
    GridToolbar: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridToolbar,
    }))),
    GridToolbarColumnsButton: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridToolbarColumnsButton,
    }))),
    GridToolbarContainer: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridToolbarContainer,
    }))),
    GridToolbarDensitySelector: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridToolbarDensitySelector,
    }))),
    GridToolbarExport: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridToolbarExport,
    }))),
    GridToolbarExportContainer: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridToolbarExportContainer,
    }))),
    GridToolbarFilterButton: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridToolbarFilterButton,
    }))),
    GridTripleDotsVerticalIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridTripleDotsVerticalIcon,
    }))),
    GridViewHeadlineIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridViewHeadlineIcon,
    }))),
    GridViewStreamIcon: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('@mui/x-data-grid'))).then(module => ({
        default: module.GridViewStreamIcon,
    }))),
};
const LazyDataGridComponents = Object.fromEntries(Object.entries(DataGridEntries).map(([key, ReactComponent]) => {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const Component = react_1.default.forwardRef((props, ref) => (react_1.default.createElement(react_1.Suspense, { fallback: null },
        react_1.default.createElement(ReactComponent, { ...props, ref: ref }))));
    Component.displayName = key;
    return [key, Component];
}));
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const LazyAttributes = react_1.default.forwardRef((props, ref) => (react_1.default.createElement(react_1.Suspense, { fallback: null },
    react_1.default.createElement(Attributes, { ...props, ref: ref }))));
LazyAttributes.displayName = 'Attributes';
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const LazyFeatureDetails = react_1.default.forwardRef((props, ref) => (react_1.default.createElement(react_1.Suspense, { fallback: null },
    react_1.default.createElement(FeatureDetails, { ...props, ref: ref }))));
LazyFeatureDetails.displayName = 'FeatureDetails';
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const LazyBaseCard = react_1.default.forwardRef((props, ref) => (react_1.default.createElement(react_1.Suspense, { fallback: null },
    react_1.default.createElement(BaseCard, { ...props, ref: ref }))));
LazyBaseCard.displayName = 'BaseCard';
const libs = {
    mobx,
    'mobx-state-tree': mst,
    react: react_1.default,
    'react/jsx-runtime': ReactJSXRuntime,
    'react-dom': ReactDom,
    'mobx-react': mxreact,
    '@mui/x-data-grid': {
        useGridApiContext: x_data_grid_1.useGridApiContext,
        useGridApiRef: x_data_grid_1.useGridApiRef,
        useGridRootProps: x_data_grid_1.useGridRootProps,
        ...LazyDataGridComponents,
    },
    // special case so plugins can easily use @mui/icons-material; don't remove
    '@mui/material/utils': MUIUtils,
    '@material-ui/core/utils': MUIUtils,
    'tss-react/mui': { makeStyles: mui_1.makeStyles },
    '@material-ui/core': {
        ...LazyMUICore,
        useTheme: material_1.useTheme,
        alpha: MUIStyles.alpha,
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        makeStyles: (args) => {
            const useStyles = (0, mui_1.makeStyles)()(args);
            return () => useStyles().classes;
        },
    },
    '@mui/material': {
        ...LazyMUICore,
        alpha: MUIStyles.alpha,
        useTheme: MUIStyles.useTheme,
    },
    'prop-types': prop_types_1.default,
    // end special case
    // material-ui subcomponents, should get rid of these
    '@mui/material/styles': {
        MUIStyles,
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        makeStyles: (args) => {
            const useStyles = (0, mui_1.makeStyles)()(args);
            return () => useStyles().classes;
        },
    },
    '@material-ui/core/styles': {
        MUIStyles,
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        makeStyles: (args) => {
            const useStyles = (0, mui_1.makeStyles)()(args);
            return () => useStyles().classes;
        },
    },
    ...MaterialPrefixMUI,
    ...MuiPrefixMUI,
    // these are core in @mui/material, but used to be in @material-ui/lab
    '@material-ui/lab/ToggleButton': Entries.ToggleButton,
    '@material-ui/lab/ToggleButtonGroup': Entries.ToggleButtonGroup,
    '@material-ui/lab/Autocomplete': Entries.Autocomplete,
    '@material-ui/lab/Alert': Entries.Alert,
    '@material-ui/lab': {
        Alert: Entries.Alert,
        Autocomplete: Entries.Autocomplete,
        ToggleButton: Entries.ToggleButton,
        ToggleButtonGroup: Entries.ToggleButtonGroup,
    },
    '@jbrowse/core/Plugin': Plugin_1.default,
    '@jbrowse/core/pluggableElementTypes': pluggableElementTypes,
    '@jbrowse/core/pluggableElementTypes/ViewType': ViewType_1.default,
    '@jbrowse/core/pluggableElementTypes/AdapterType': AdapterType_1.default,
    '@jbrowse/core/pluggableElementTypes/DisplayType': DisplayType_1.default,
    '@jbrowse/core/pluggableElementTypes/TrackType': TrackType_1.default,
    '@jbrowse/core/pluggableElementTypes/WidgetType': WidgetType_1.default,
    '@jbrowse/core/pluggableElementTypes/models': pluggableElementTypeModels,
    '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType': ServerSideRendererType,
    '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType': CircularChordRendererType_1.default,
    '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType': BoxRendererType,
    '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType': FeatureRendererType,
    '@jbrowse/core/pluggableElementTypes/renderers/RendererType': RendererType,
    '@jbrowse/core/configuration': Configuration,
    '@jbrowse/core/util/types/mst': mstTypes,
    '@jbrowse/core/ui': coreUi,
    '@jbrowse/core/util': coreUtil,
    '@jbrowse/core/util/color': coreColor,
    '@jbrowse/core/util/layouts': coreLayouts,
    '@jbrowse/core/util/tracks': trackUtils,
    '@jbrowse/core/util/Base1DViewModel': Base1DViewModel_1.default,
    '@jbrowse/core/util/io': coreIo,
    '@jbrowse/core/util/mst-reflection': coreMstReflection,
    '@jbrowse/core/util/rxjs': rxjs,
    '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail': {
        Attributes: LazyAttributes,
        FeatureDetails: LazyFeatureDetails,
        BaseCard: LazyBaseCard,
    },
    '@jbrowse/core/data_adapters/BaseAdapter': BaseAdapterExports,
};
const libsList = Object.keys(libs);
// make sure that all the items in the ReExports/list array (used by build
// systems and such) are included here, and vice versa
const inLibsOnly = libsList.filter(mod => !list_1.default.includes(mod));
if (inLibsOnly.length > 0) {
    throw new Error(`The following modules are in the modules libs, but not the re-exports list: ${inLibsOnly.join(', ')}`);
}
const inReExportsOnly = list_1.default.filter(mod => !libsList.includes(mod));
if (inReExportsOnly.length) {
    throw new Error(`The following modules are in the re-exports list, but not the modules libs: ${inReExportsOnly.join(', ')}`);
}
exports.default = libs;
