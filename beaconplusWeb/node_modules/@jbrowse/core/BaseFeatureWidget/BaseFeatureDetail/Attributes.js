"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const is_object_1 = __importDefault(require("is-object"));
// locals
const util_1 = require("./util");
const util_2 = require("../../util");
const DataGridDetails_1 = __importDefault(require("./DataGridDetails"));
const ArrayValue_1 = __importDefault(require("./ArrayValue"));
const UriField_1 = __importDefault(require("./UriField"));
const SimpleField_1 = __importDefault(require("./SimpleField"));
const MAX_FIELD_NAME_WIDTH = 170;
// these are always omitted as too detailed
const globalOmit = [
    '__jbrowsefmt',
    'length',
    'position',
    'subfeatures',
    'uniqueId',
    'exonFrames',
    'parentId',
    'thickStart',
    'thickEnd',
];
function Attributes(props) {
    const { attributes, omit = [], omitSingleLevel = [], descriptions, formatter = val => val, hideUris, prefix = [], } = props;
    const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel]);
    const { __jbrowsefmt, ...rest } = attributes;
    const formattedAttributes = { ...rest, ...__jbrowsefmt };
    const maxLabelWidth = (0, util_1.generateMaxWidth)(Object.entries(formattedAttributes).filter(([k, v]) => v !== undefined && !omits.has(k)), prefix);
    return (react_1.default.createElement(react_1.default.Fragment, null, Object.entries(formattedAttributes)
        .filter(([k, v]) => v !== undefined && !omits.has(k))
        .map(([key, value]) => {
        const description = (0, util_1.accessNested)([...prefix, key], descriptions);
        if (Array.isArray(value)) {
            // check if it looks like an array of objects, which could be used
            // in data grid
            return value.length > 1 && value.every(val => (0, is_object_1.default)(val)) ? (react_1.default.createElement(DataGridDetails_1.default, { key: key, name: key, prefix: prefix, value: value })) : (react_1.default.createElement(ArrayValue_1.default, { key: key, name: key, value: value, description: description, prefix: prefix }));
        }
        else if ((0, is_object_1.default)(value)) {
            const { omitSingleLevel, ...rest } = props;
            return (0, util_2.isUriLocation)(value) ? (hideUris ? null : (react_1.default.createElement(UriField_1.default, { key: key, name: key, prefix: prefix, value: value }))) : (react_1.default.createElement(Attributes, { key: key, ...rest, attributes: value, descriptions: descriptions, prefix: [...prefix, key] }));
        }
        else {
            return (react_1.default.createElement(SimpleField_1.default, { key: key, name: key, value: formatter(value, key), description: description, prefix: prefix, width: Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH) }));
        }
    })));
}
exports.default = Attributes;
