import { Instance } from 'mobx-state-tree';
import PluginManager from '../PluginManager';
/**
 * #stateModel BaseFeatureWidget
 * displays data about features, allowing configuration callbacks to modify the
 * contents of what is displayed
 *
 * see: formatDetails-\>feature,formatDetails-\>subfeatures
 */
export declare function stateModelFactory(pluginManager: PluginManager): import("mobx-state-tree").IModelType<{
    /**
     * #property
     */
    id: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<string>, [undefined]>;
    /**
     * #property
     */
    type: import("mobx-state-tree").ISimpleType<"BaseFeatureWidget">;
    /**
     * #property
     */
    featureData: import("mobx-state-tree").IType<any, any, any>;
    /**
     * #property
     */
    formattedFields: import("mobx-state-tree").IType<any, any, any>;
    /**
     * #property
     */
    unformattedFeatureData: import("mobx-state-tree").IType<any, any, any>;
    /**
     * #property
     */
    view: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IReferenceType<import("mobx-state-tree").IAnyType>>;
    /**
     * #property
     */
    track: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IReferenceType<import("mobx-state-tree").IAnyType>>;
    /**
     * #property
     */
    trackId: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    /**
     * #property
     */
    trackType: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    /**
     * #property
     */
    maxDepth: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<number>>;
    /**
     * #property
     */
    sequenceFeatureDetails: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").IModelType<{}, {
        intronBp: number;
        upDownBp: number;
        upperCaseCDS: boolean;
    } & {
        setUpDownBp(f: number): void;
        setIntronBp(f: number): void;
        setUpperCaseCDS(f: boolean): void;
    } & {
        afterAttach(): void;
    }, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>, [undefined]>;
}, {
    error: unknown;
} & {
    /**
     * #action
     */
    setFeatureData(featureData: Record<string, unknown>): void;
    /**
     * #action
     */
    clearFeatureData(): void;
    /**
     * #action
     */
    setFormattedData(feat: Record<string, unknown>): void;
    /**
     * #action
     */
    setExtra(type?: string, trackId?: string, maxDepth?: number): void;
    /**
     * #action
     */
    setError(e: unknown): void;
} & {
    afterCreate(): void;
}, import("mobx-state-tree").ModelCreationType<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
    /**
     * #property
     */
    id: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<string>, [undefined]>;
    /**
     * #property
     */
    type: import("mobx-state-tree").ISimpleType<"BaseFeatureWidget">;
    /**
     * #property
     */
    featureData: import("mobx-state-tree").IType<any, any, any>;
    /**
     * #property
     */
    formattedFields: import("mobx-state-tree").IType<any, any, any>;
    /**
     * #property
     */
    unformattedFeatureData: import("mobx-state-tree").IType<any, any, any>;
    /**
     * #property
     */
    view: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IReferenceType<import("mobx-state-tree").IAnyType>>;
    /**
     * #property
     */
    track: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IReferenceType<import("mobx-state-tree").IAnyType>>;
    /**
     * #property
     */
    trackId: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    /**
     * #property
     */
    trackType: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    /**
     * #property
     */
    maxDepth: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<number>>;
    /**
     * #property
     */
    sequenceFeatureDetails: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").IModelType<{}, {
        intronBp: number;
        upDownBp: number;
        upperCaseCDS: boolean;
    } & {
        setUpDownBp(f: number): void;
        setIntronBp(f: number): void;
        setUpperCaseCDS(f: boolean): void;
    } & {
        afterAttach(): void;
    }, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>, [undefined]>;
}>>, {
    id: string;
    type: "BaseFeatureWidget";
    track: import("mobx-state-tree").ReferenceIdentifier | undefined;
    view: import("mobx-state-tree").ReferenceIdentifier | undefined;
    trackId: string | undefined;
    trackType: string | undefined;
    maxDepth: number | undefined;
    formattedFields: any;
    sequenceFeatureDetails: import("mobx-state-tree").ModelSnapshotType<{}>;
    finalizedFeatureData: any;
}>;
export type BaseFeatureWidgetStateModel = ReturnType<typeof stateModelFactory>;
export type BaseFeatureWidgetModel = Instance<BaseFeatureWidgetStateModel>;
