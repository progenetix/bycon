"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SequenceFeatureDetailsF = void 0;
const mobx_state_tree_1 = require("mobx-state-tree");
const mobx_1 = require("mobx");
// locals
const util_1 = require("../../util");
function SequenceFeatureDetailsF() {
    return mobx_state_tree_1.types
        .model('SequenceFeatureDetails', {})
        .volatile(() => {
        var _a, _b;
        return ({
            intronBp: +((_a = (0, util_1.localStorageGetItem)('sequenceFeatureDetails-intronBp')) !== null && _a !== void 0 ? _a : 10),
            upDownBp: +((_b = (0, util_1.localStorageGetItem)('sequenceFeatureDetails-upDownBp')) !== null && _b !== void 0 ? _b : 100),
            upperCaseCDS: Boolean(JSON.parse((0, util_1.localStorageGetItem)('sequenceFeatureDetails-upperCaseCDS') || 'true')),
        });
    })
        .actions(self => ({
        setUpDownBp(f) {
            self.upDownBp = f;
        },
        setIntronBp(f) {
            self.intronBp = f;
        },
        setUpperCaseCDS(f) {
            self.upperCaseCDS = f;
        },
    }))
        .actions(self => ({
        afterAttach() {
            (0, mobx_state_tree_1.addDisposer)(self, (0, mobx_1.autorun)(() => {
                (0, util_1.localStorageSetItem)('sequenceFeatureDetails-upDownBp', JSON.stringify(self.upDownBp));
                (0, util_1.localStorageSetItem)('sequenceFeatureDetails-intronBp', JSON.stringify(self.intronBp));
                (0, util_1.localStorageSetItem)('sequenceFeatureDetails-upperCaseCDS', JSON.stringify(self.upperCaseCDS));
            }));
        },
    }));
}
exports.SequenceFeatureDetailsF = SequenceFeatureDetailsF;
