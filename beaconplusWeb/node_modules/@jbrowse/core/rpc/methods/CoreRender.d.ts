import RpcMethodType from '../../pluggableElementTypes/RpcMethodType';
import { RenderResults, ResultsSerialized, RenderArgs, RenderArgsSerialized } from './util';
import { RemoteAbortSignal } from '../remoteAbortSignals';
/**
 * fetches features from an adapter and call a renderer with them
 */
export default class CoreRender extends RpcMethodType {
    name: string;
    serializeArguments(args: RenderArgs, rpcDriver: string): Promise<import("../../pluggableElementTypes/renderers/ServerSideRendererType").RenderArgsSerialized | RenderArgs>;
    execute(args: RenderArgsSerialized & {
        signal?: RemoteAbortSignal;
    }, rpcDriver: string): Promise<RenderResults | ResultsSerialized>;
    deserializeReturn(serializedReturn: RenderResults | ResultsSerialized, args: RenderArgs, rpcDriver: string): Promise<unknown>;
}
