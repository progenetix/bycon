"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const MultiLayout_1 = __importDefault(require("./MultiLayout"));
const PrecomputedLayout_1 = __importDefault(require("./PrecomputedLayout"));
class ThrowingLayout {
    constructor() {
        throw new Error('invalid layout name');
    }
}
class PrecomputedMultiLayout extends MultiLayout_1.default {
    constructor(json) {
        // use ThrowingLayout because there is not supposed to be any creation
        // of new layouts in a precomputed layout
        super(ThrowingLayout);
        Object.entries(json).forEach(([layoutName, sublayoutJson]) => {
            this.subLayouts.set(layoutName, new PrecomputedLayout_1.default(sublayoutJson));
        });
    }
}
exports.default = PrecomputedMultiLayout;
