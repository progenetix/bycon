export default class CompositeMap<T, U> {
    private submaps;
    constructor(submaps: Map<T, U>[]);
    has(id: T): boolean;
    get(id: T): U | undefined;
    values(): Generator<U, void, unknown>;
    keys(): Generator<T, void, unknown>;
    find<V>(f: (arg0: U) => V): U | undefined;
    [Symbol.iterator](): Generator<(T | U | undefined)[], void, unknown>;
    entries(): Generator<(T | U | undefined)[], void, unknown>;
}
