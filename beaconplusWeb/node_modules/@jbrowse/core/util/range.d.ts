/**
 * fast low-level intersection of 2 coordinate ranges. assumes interbase coordinates.
 *
 * assumes `left <= right` for both ranges
 *
 * @returns array of [left, right], or [] if the ranges do not intersect. the choice of [] is because it allows destructuring array assignment without check for undefined return
 */
export declare function intersection2(left1: number, right1: number, left2: number, right2: number): number[];
/**
 * Return whether 2 interbase coordinate ranges intersect.
 *
 * @param left1 -
 * @param right1 -
 * @param left2 -
 * @param right2 -
 *
 * @returns true if the two ranges intersect
 */
export declare function doesIntersect2(left1: number, right1: number, left2: number, right2: number): boolean;
/**
 * Return whether the first region is completely contained within the second region
 *
 * @param left1 - candidate inner region left
 * @param right1 - candidate inner region right
 * @param left2 - candidate outer region left
 * @param right2 - candidate outer region right
 */
export declare function isContainedWithin(left1: number, right1: number, left2: number, right2: number): boolean;
