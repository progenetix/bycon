/// <reference types="react" />
import propTypes from 'prop-types';
export declare const ElementId: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<string>, [undefined]>;
export declare const PropTypes: {
    Region: propTypes.Requireable<propTypes.InferProps<{
        refName: propTypes.Validator<string>;
        start: propTypes.Validator<number>;
        end: propTypes.Validator<number>;
    }>>;
    ConfigSchema: import("react").Requireable<any>;
    Feature: propTypes.Requireable<propTypes.InferProps<{
        get: propTypes.Validator<(...args: any[]) => any>;
        id: propTypes.Validator<(...args: any[]) => any>;
    }>>;
};
export declare const NoAssemblyRegion: import("mobx-state-tree").IModelType<{
    refName: import("mobx-state-tree").ISimpleType<string>;
    start: import("mobx-state-tree").ISimpleType<number>;
    end: import("mobx-state-tree").ISimpleType<number>;
    reversed: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<boolean>, [undefined]>;
}, {
    setRefName(newRefName: string): void;
}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>;
export declare const Region: import("mobx-state-tree").IModelType<{
    refName: import("mobx-state-tree").ISimpleType<string>;
    start: import("mobx-state-tree").ISimpleType<number>;
    end: import("mobx-state-tree").ISimpleType<number>;
    reversed: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<boolean>, [undefined]>;
} & {
    assemblyName: import("mobx-state-tree").ISimpleType<string>;
}, {
    setRefName(newRefName: string): void;
}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>;
export declare const LocalPathLocation: import("mobx-state-tree").IModelType<{
    locationType: import("mobx-state-tree").ISimpleType<"LocalPathLocation">;
    localPath: import("mobx-state-tree").ISimpleType<string>;
}, {}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>;
export declare const BlobLocation: import("mobx-state-tree").IModelType<{
    locationType: import("mobx-state-tree").ISimpleType<"BlobLocation">;
    name: import("mobx-state-tree").ISimpleType<string>;
    blobId: import("mobx-state-tree").ISimpleType<string>;
}, {}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>;
export declare const UriLocationRaw: import("mobx-state-tree").IModelType<{
    locationType: import("mobx-state-tree").ISimpleType<"UriLocation">;
    uri: import("mobx-state-tree").ISimpleType<string>;
    baseUri: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    internetAccountId: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    internetAccountPreAuthorization: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IModelType<{
        internetAccountType: import("mobx-state-tree").ISimpleType<string>;
        authInfo: import("mobx-state-tree").IType<any, any, any>;
    }, {}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>>;
}, {}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>;
export declare const UriLocation: import("mobx-state-tree").ISnapshotProcessor<import("mobx-state-tree").IModelType<{
    locationType: import("mobx-state-tree").ISimpleType<"UriLocation">;
    uri: import("mobx-state-tree").ISimpleType<string>;
    baseUri: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    internetAccountId: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    internetAccountPreAuthorization: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IModelType<{
        internetAccountType: import("mobx-state-tree").ISimpleType<string>;
        authInfo: import("mobx-state-tree").IType<any, any, any>;
    }, {}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>>;
}, {}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>, import("mobx-state-tree")._NotCustomized, {
    locationType: "UriLocation";
    uri: string;
    internetAccountId: string | undefined;
    internetAccountPreAuthorization: import("mobx-state-tree").ModelSnapshotType<{
        internetAccountType: import("mobx-state-tree").ISimpleType<string>;
        authInfo: import("mobx-state-tree").IType<any, any, any>;
    }> | undefined;
}>;
export declare const FileLocation: import("mobx-state-tree").ISnapshotProcessor<import("mobx-state-tree").ITypeUnion<import("mobx-state-tree").ModelCreationType<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
    locationType: import("mobx-state-tree").ISimpleType<"UriLocation">;
    uri: import("mobx-state-tree").ISimpleType<string>;
    baseUri: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    internetAccountId: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    internetAccountPreAuthorization: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IModelType<{
        internetAccountType: import("mobx-state-tree").ISimpleType<string>;
        authInfo: import("mobx-state-tree").IType<any, any, any>;
    }, {}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>>;
}>> | import("mobx-state-tree").ModelCreationType<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
    locationType: import("mobx-state-tree").ISimpleType<"BlobLocation">;
    name: import("mobx-state-tree").ISimpleType<string>;
    blobId: import("mobx-state-tree").ISimpleType<string>;
}>> | import("mobx-state-tree").ModelCreationType<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
    locationType: import("mobx-state-tree").ISimpleType<"LocalPathLocation">;
    localPath: import("mobx-state-tree").ISimpleType<string>;
}>>, {
    locationType: "UriLocation";
    uri: string;
    internetAccountId: string | undefined;
    internetAccountPreAuthorization: import("mobx-state-tree").ModelSnapshotType<{
        internetAccountType: import("mobx-state-tree").ISimpleType<string>;
        authInfo: import("mobx-state-tree").IType<any, any, any>;
    }> | undefined;
} | import("mobx-state-tree").ModelSnapshotType<{
    locationType: import("mobx-state-tree").ISimpleType<"BlobLocation">;
    name: import("mobx-state-tree").ISimpleType<string>;
    blobId: import("mobx-state-tree").ISimpleType<string>;
}> | import("mobx-state-tree").ModelSnapshotType<{
    locationType: import("mobx-state-tree").ISimpleType<"LocalPathLocation">;
    localPath: import("mobx-state-tree").ISimpleType<string>;
}>, import("mobx-state-tree").ModelInstanceType<{
    locationType: import("mobx-state-tree").ISimpleType<"BlobLocation">;
    name: import("mobx-state-tree").ISimpleType<string>;
    blobId: import("mobx-state-tree").ISimpleType<string>;
}, {}> | import("mobx-state-tree").ModelInstanceType<{
    locationType: import("mobx-state-tree").ISimpleType<"LocalPathLocation">;
    localPath: import("mobx-state-tree").ISimpleType<string>;
}, {}> | ({
    locationType: "UriLocation";
    uri: string;
} & Partial<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
    locationType: import("mobx-state-tree").ISimpleType<"UriLocation">;
    uri: import("mobx-state-tree").ISimpleType<string>;
    baseUri: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    internetAccountId: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    internetAccountPreAuthorization: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IModelType<{
        internetAccountType: import("mobx-state-tree").ISimpleType<string>;
        authInfo: import("mobx-state-tree").IType<any, any, any>;
    }, {}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>>;
}>> & import("mobx-state-tree/dist/internal").NonEmptyObject)>, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>;
