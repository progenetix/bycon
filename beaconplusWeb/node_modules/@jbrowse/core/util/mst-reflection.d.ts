import { IAnyType, IModelReflectionPropertiesData, IAnyComplexType, ISimpleType, UnionStringArray } from 'mobx-state-tree';
export interface ILiteralType<T> extends ISimpleType<T> {
    value: T;
}
/**
 * get the inner type of an MST optional, array, or late type object
 */
export declare function getSubType(type: IAnyType): IAnyType;
/**
 * get the array of the subtypes in a union
 */
export declare function getUnionSubTypes(unionType: IAnyType): IAnyType[];
/**
 * get the type of one of the properties of the given MST model type
 */
export declare function getPropertyType(type: IModelReflectionPropertiesData, propertyName: string): IAnyType;
/**
 * get the base type from inside an MST optional type
 */
export declare function getDefaultValue(type: IAnyType): any;
export type IEnumerationType<T extends string> = ISimpleType<UnionStringArray<T[]>>;
/** get the string values of an MST enumeration type */
export declare function getEnumerationValues(type: IAnyComplexType): string[];
export declare function resolveLateType(maybeLate: IAnyType): any;
