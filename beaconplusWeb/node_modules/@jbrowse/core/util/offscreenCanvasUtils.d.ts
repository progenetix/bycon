import React from 'react';
export type RenderReturn = Record<string, unknown> | void;
type RendererRet = Promise<RenderReturn> | RenderReturn;
export declare function renderToAbstractCanvas(width: number, height: number, opts: {
    exportSVG?: {
        rasterizeLayers?: boolean;
        scale?: number;
    };
    highResolutionScaling?: number;
}, cb: (ctx: CanvasRenderingContext2D) => RendererRet): Promise<{
    canvasRecordedData: any;
} | {
    reactElement: React.JSX.Element;
} | {
    imageData: any;
}>;
export declare function getSerializedSvg(results: {
    width: number;
    height: number;
    canvasRecordedData: unknown;
}): Promise<string>;
export declare function ReactRendering({ rendering, }: {
    rendering: {
        reactElement?: React.ReactNode;
        html?: string;
    };
}): React.JSX.Element;
export {};
