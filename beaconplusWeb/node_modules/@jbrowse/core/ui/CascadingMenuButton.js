"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const CascadingMenu_1 = __importDefault(require("@jbrowse/core/ui/CascadingMenu"));
const material_1 = require("@mui/material");
const mobx_react_1 = require("mobx-react");
const hooks_1 = require("material-ui-popup-state/hooks");
const CascadingMenuButton = (0, mobx_react_1.observer)(function CascadingMenuButton({ children, menuItems, closeAfterItemClick = true, stopPropagation, setOpen, onClick: onClickExtra, ...rest }) {
    const popupState = (0, hooks_1.usePopupState)({
        popupId: 'viewMenu',
        variant: 'popover',
    });
    const { onClick, onTouchStart, ...rest2 } = (0, hooks_1.bindTrigger)(popupState);
    const { isOpen } = popupState;
    (0, react_1.useEffect)(() => {
        setOpen === null || setOpen === void 0 ? void 0 : setOpen(isOpen);
    }, [isOpen, setOpen]);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(material_1.IconButton, { onClick: event => {
                if (stopPropagation) {
                    event.stopPropagation();
                }
                onClick(event);
                onClickExtra === null || onClickExtra === void 0 ? void 0 : onClickExtra();
            }, onTouchStart: event => {
                if (stopPropagation) {
                    event.stopPropagation();
                }
                onTouchStart(event);
                onClickExtra === null || onClickExtra === void 0 ? void 0 : onClickExtra();
            }, ...rest2, ...rest, disabled: menuItems.length === 0 }, children),
        react_1.default.createElement(CascadingMenu_1.default, { ...(0, hooks_1.bindPopover)(popupState), onMenuItemClick: (_, callback) => callback(), menuItems: menuItems, closeAfterItemClick: closeAfterItemClick, popupState: popupState })));
});
exports.default = CascadingMenuButton;
