import React, { useMemo } from 'react';
import { observer } from 'mobx-react';
// locals
import Chord from './Chord';
const StructuralVariantChordsReactComponent = observer(function ({ features, config, displayModel, blockDefinitions, radius, bezierRadius, displayModel: { selectedFeatureId }, onChordClick, }) {
    // make a map of refName -> blockDefinition
    const blocksForRefsMemo = useMemo(() => {
        const blocksForRefs = {};
        for (const block of blockDefinitions) {
            const regions = block.region.elided
                ? block.region.regions
                : [block.region];
            for (const region of regions) {
                blocksForRefs[region.refName] = block;
            }
        }
        return blocksForRefs;
    }, [blockDefinitions]);
    return (React.createElement("g", { id: `chords-${typeof jest !== 'undefined' ? 'test' : displayModel.id}`, "data-testid": "structuralVariantChordRenderer" }, [...features.values()].map(feature => {
        const id = feature.id();
        const selected = String(selectedFeatureId) === String(id);
        return (React.createElement(Chord, { key: id, feature: feature, config: config, radius: radius, bezierRadius: bezierRadius, blocksForRefs: blocksForRefsMemo, selected: selected, onClick: onChordClick }));
    })));
});
export default StructuralVariantChordsReactComponent;
