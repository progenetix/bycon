import { IAnyStateTreeNode, Instance } from 'mobx-state-tree';
import PluginManager from '@jbrowse/core/PluginManager';
import { AnyConfigurationModel } from '@jbrowse/core/configuration';
/**
 * #stateModel DrawerWidgetSessionMixin
 */
export declare function DrawerWidgetSessionMixin(pluginManager: PluginManager): import("mobx-state-tree").IModelType<{
    /**
     * #property
     */
    drawerPosition: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<string>, [undefined]>;
    /**
     * #property
     */
    drawerWidth: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<number>, [undefined]>;
    /**
     * #property
     */
    widgets: import("mobx-state-tree").IMapType<import("mobx-state-tree").IAnyType>;
    /**
     * #property
     */
    activeWidgets: import("mobx-state-tree").IMapType<import("mobx-state-tree").IMaybe<import("mobx-state-tree").IReferenceType<import("mobx-state-tree").IAnyType>>>;
    /**
     * #property
     */
    minimized: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<boolean>, [undefined]>;
}, {
    /**
     * #getter
     */
    readonly visibleWidget: any;
} & {
    /**
     * #action
     */
    setDrawerPosition(arg: string): void;
    /**
     * #action
     */
    updateDrawerWidth(drawerWidth: number): number;
    /**
     * #action
     */
    resizeDrawer(distance: number): number;
    /**
     * #action
     */
    addWidget(typeName: string, id: string, initialState?: {}, conf?: unknown): any;
    /**
     * #action
     */
    showWidget(widget: any): void;
    /**
     * #action
     */
    hasWidget(widget: any): boolean;
    /**
     * #action
     */
    hideWidget(widget: any): void;
    /**
     * #action
     */
    minimizeWidgetDrawer(): void;
    /**
     * #action
     */
    showWidgetDrawer(): void;
    /**
     * #action
     */
    hideAllWidgets(): void;
    /**
     * #action
     * opens a configuration editor to configure the given thing,
     * and sets the current task to be configuring it
     * @param configuration -
     */
    editConfiguration(configuration: AnyConfigurationModel): void;
    afterAttach(): void;
}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>;
/** Session mixin MST type for a session that manages drawer widgets */
export type SessionWithDrawerWidgetsType = ReturnType<typeof DrawerWidgetSessionMixin>;
/** Instance of a session that manages drawer widgets */
export type SessionWithDrawerWidgets = Instance<SessionWithDrawerWidgetsType>;
/** Type guard for SessionWithDrawerWidgets */
export declare function isSessionWithDrawerWidgets(session: IAnyStateTreeNode): session is SessionWithDrawerWidgets;
