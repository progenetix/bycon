/** MST mixin for managing a queue of dialogs at the level of the session */
import { types } from 'mobx-state-tree';
import { isBaseSession } from './BaseSession';
/**
 * #stateModel DialogQueueSessionMixin
 */
export function DialogQueueSessionMixin(_pluginManager) {
    return types
        .model('DialogQueueSessionMixin', {})
        .volatile(() => ({
        queueOfDialogs: [],
    }))
        .views(self => ({
        /**
         * #getter
         */
        get DialogComponent() {
            var _a;
            return (_a = self.queueOfDialogs[0]) === null || _a === void 0 ? void 0 : _a[0];
        },
        /**
         * #getter
         */
        get DialogProps() {
            var _a;
            return (_a = self.queueOfDialogs[0]) === null || _a === void 0 ? void 0 : _a[1];
        },
    }))
        .actions(self => ({
        /**
         * #action
         */
        removeActiveDialog() {
            self.queueOfDialogs = self.queueOfDialogs.slice(1);
        },
        /**
         * #action
         */
        queueDialog(cb) {
            const [component, props] = cb(() => {
                this.removeActiveDialog();
            });
            self.queueOfDialogs = [...self.queueOfDialogs, [component, props]];
        },
    }));
}
/** Type guard for SessionWithDialogs */
export function isSessionWithDialogs(session) {
    return isBaseSession(session) && 'queueOfDialogs' in session;
}
