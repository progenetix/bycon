import React, { useState } from 'react';
import { Button, DialogContent, DialogActions } from '@mui/material';
import { makeStyles } from 'tss-react/mui';
import { useLocalStorage } from '@jbrowse/core/util';
import clone from 'clone';
// locals
import DraggableDialog from './DraggableDialog';
import SourcesGrid from './SourcesGrid';
const useStyles = makeStyles()({
    content: {
        minWidth: 800,
    },
});
export default function SetColorDialog({ model, handleClose, }) {
    const { classes } = useStyles();
    const { sources } = model;
    const [currLayout, setCurrLayout] = useState(clone(sources || []));
    const [showTips, setShowTips] = useLocalStorage('multiwiggle-showTips', true);
    return (React.createElement(DraggableDialog, { open: true, onClose: handleClose, maxWidth: "xl", title: 'Multi-wiggle color/arrangement editor' },
        React.createElement(DialogContent, { className: classes.content },
            React.createElement(Button, { variant: "contained", style: { float: 'right' }, onClick: () => setShowTips(!showTips) }, showTips ? 'Hide tips' : 'Show tips'),
            React.createElement("br", null),
            showTips ? (React.createElement(React.Fragment, null,
                "Helpful tips",
                React.createElement("ul", null,
                    React.createElement("li", null, "You can select rows in the table with the checkboxes"),
                    React.createElement("li", null, "Multi-select is enabled with shift-click and control-click"),
                    React.createElement("li", null, "The \"Move selected items up/down\" can re-arrange subtracks"),
                    React.createElement("li", null, "Sorting the data grid itself can also re-arrange subtracks"),
                    React.createElement("li", null, "Changes are applied when you hit Submit"),
                    React.createElement("li", null, "You can click and drag the dialog box to move it on the screen"),
                    React.createElement("li", null, "Columns in the table can be hidden using a vertical '...' menu on the right side of each column")))) : null,
            React.createElement(SourcesGrid, { rows: currLayout, onChange: setCurrLayout, showTips: showTips })),
        React.createElement(DialogActions, null,
            React.createElement(Button, { variant: "contained", type: "submit", color: "inherit", onClick: () => {
                    model.clearLayout();
                    setCurrLayout(model.sources || []);
                } }, "Clear custom settings"),
            React.createElement(Button, { variant: "contained", color: "secondary", onClick: () => {
                    handleClose();
                    setCurrLayout([...(model.sources || [])]);
                } }, "Cancel"),
            React.createElement(Button, { variant: "contained", color: "primary", type: "submit", onClick: () => {
                    model.setLayout(currLayout);
                    handleClose();
                } }, "Submit"))));
}
