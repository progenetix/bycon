import React from 'react';
import { observer } from 'mobx-react';
// locals
import Tooltip from '../../Tooltip';
import { toP } from '../../util';
const en = (n) => n.toLocaleString('en-US');
const TooltipContents = React.forwardRef(function TooltipContents2({ feature }, ref) {
    const start = feature.get('start');
    const end = feature.get('end');
    const name = feature.get('refName');
    const loc = [name, start === end ? en(start) : `${en(start)}..${en(end)}`]
        .filter(f => !!f)
        .join(':');
    return feature.get('summary') !== undefined ? (React.createElement("div", { ref: ref },
        loc,
        React.createElement("br", null),
        "Max: ",
        toP(feature.get('maxScore')),
        React.createElement("br", null),
        "Avg: ",
        toP(feature.get('score')),
        React.createElement("br", null),
        "Min: ",
        toP(feature.get('minScore')))) : (React.createElement("div", { ref: ref },
        loc,
        React.createElement("br", null),
        `${toP(feature.get('score'))}`));
});
const WiggleTooltip = observer(function (props) {
    return React.createElement(Tooltip, { TooltipContents: TooltipContents, ...props });
});
export default WiggleTooltip;
export { default as Tooltip } from '../../Tooltip';
