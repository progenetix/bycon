import React from 'react';
import { observer } from 'mobx-react';
import { alpha, Portal, useTheme } from '@mui/material';
import { makeStyles } from 'tss-react/mui';
import { useClientPoint, useFloating, useInteractions, } from '@floating-ui/react';
// locals
import { YSCALEBAR_LABEL_OFFSET, round } from './util';
const useStyles = makeStyles()(theme => ({
    // these styles come from
    // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js
    tooltip: {
        position: 'absolute',
        pointerEvents: 'none',
        backgroundColor: alpha(theme.palette.grey[700], 0.9),
        borderRadius: theme.shape.borderRadius,
        color: theme.palette.common.white,
        fontFamily: theme.typography.fontFamily,
        padding: '4px 8px',
        fontSize: theme.typography.pxToRem(12),
        lineHeight: `${round(14 / 10)}em`,
        maxWidth: 300,
        wordWrap: 'break-word',
    },
    hoverVertical: {
        background: '#333',
        border: 'none',
        width: 1,
        height: '100%',
        top: YSCALEBAR_LABEL_OFFSET,
        cursor: 'default',
        position: 'absolute',
        pointerEvents: 'none',
    },
}));
const Tooltip = observer(function Tooltip({ model, height, clientMouseCoord, offsetMouseCoord, clientRect, TooltipContents, useClientY, }) {
    var _a, _b;
    const theme = useTheme();
    const { featureUnderMouse } = model;
    const { classes } = useStyles();
    const { refs, floatingStyles, context } = useFloating({
        placement: 'right',
        strategy: 'fixed',
    });
    const x = clientMouseCoord[0] + 5;
    const y = useClientY ? clientMouseCoord[1] : (clientRect === null || clientRect === void 0 ? void 0 : clientRect.top) || 0;
    const clientPoint = useClientPoint(context, { x, y });
    const { getFloatingProps } = useInteractions([clientPoint]);
    const popperTheme = (_a = theme === null || theme === void 0 ? void 0 : theme.components) === null || _a === void 0 ? void 0 : _a.MuiPopper;
    return featureUnderMouse ? (React.createElement(React.Fragment, null,
        React.createElement(Portal, { container: (_b = popperTheme === null || popperTheme === void 0 ? void 0 : popperTheme.defaultProps) === null || _b === void 0 ? void 0 : _b.container },
            React.createElement("div", { className: classes.tooltip, ref: refs.setFloating, style: {
                    ...floatingStyles,
                    zIndex: 100000,
                    pointerEvents: 'none',
                }, ...getFloatingProps() },
                React.createElement(TooltipContents, { model: model, feature: featureUnderMouse }))),
        React.createElement("div", { className: classes.hoverVertical, style: {
                left: offsetMouseCoord[0],
                height: height - YSCALEBAR_LABEL_OFFSET * 2,
            } }))) : null;
});
export default Tooltip;
