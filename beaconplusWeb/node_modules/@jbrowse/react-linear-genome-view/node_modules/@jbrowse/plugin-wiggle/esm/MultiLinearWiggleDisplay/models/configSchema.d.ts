import PluginManager from '@jbrowse/core/PluginManager';
export default function WiggleConfigFactory(pluginManager: PluginManager): import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaType<{
    /**
     * #slot
     */
    defaultRendering: {
        type: string;
        model: import("mobx-state-tree").ISimpleType<string>;
        defaultValue: string;
    };
    /**
     * #slot
     */
    renderers: import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaType<{
        MultiXYPlotRenderer: import("@jbrowse/core/configuration").AnyConfigurationSchemaType;
        MultiDensityRenderer: import("@jbrowse/core/configuration").AnyConfigurationSchemaType;
        MultiRowXYPlotRenderer: import("@jbrowse/core/configuration").AnyConfigurationSchemaType;
        MultiLineRenderer: import("@jbrowse/core/configuration").AnyConfigurationSchemaType;
        MultiRowLineRenderer: import("@jbrowse/core/configuration").AnyConfigurationSchemaType;
    }, import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaOptions<undefined, undefined>>;
    /**
     * #slot
     */
    height: {
        type: string;
        defaultValue: number;
    };
}, import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaOptions<import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaType<{
    autoscale: {
        type: string;
        defaultValue: string;
        model: import("mobx-state-tree").ISimpleType<string>;
        description: string;
    };
    minimalTicks: {
        type: string;
        defaultValue: boolean;
        description: string;
    };
    minScore: {
        type: string;
        defaultValue: number;
        description: string;
    };
    maxScore: {
        type: string;
        description: string;
        defaultValue: number;
    };
    numStdDev: {
        type: string;
        description: string;
        defaultValue: number;
    };
    scaleType: {
        type: string;
        model: import("mobx-state-tree").ISimpleType<string>;
        description: string;
        defaultValue: string;
    };
    inverted: {
        type: string;
        description: string;
        defaultValue: boolean;
    };
}, import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaOptions<import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaType<{
    maxFeatureScreenDensity: {
        type: string;
        description: string;
        defaultValue: number;
    };
    fetchSizeLimit: {
        type: string;
        defaultValue: number;
        description: string;
    };
    height: {
        type: string;
        defaultValue: number;
        description: string;
    };
    mouseover: {
        type: string;
        description: string;
        defaultValue: string;
        contextVariable: string[];
    };
}, import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaOptions<undefined, "displayId">>, undefined>>, undefined>>;
