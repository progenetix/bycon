import FeatureRendererType from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType';
import { renderToAbstractCanvas } from '@jbrowse/core/util';
export default class WiggleBaseRenderer extends FeatureRendererType {
    constructor() {
        super(...arguments);
        this.supportsSVG = true;
    }
    async render(renderProps) {
        const features = await this.getFeatures(renderProps);
        const { height, regions, bpPerPx } = renderProps;
        const [region] = regions;
        const width = (region.end - region.start) / bpPerPx;
        // @ts-expect-error
        const { reducedFeatures, ...rest } = await renderToAbstractCanvas(width, height, renderProps, ctx => this.draw(ctx, {
            ...renderProps,
            features,
        }));
        const results = await super.render({
            ...renderProps,
            ...rest,
            features,
            height,
            width,
        });
        return {
            ...results,
            ...rest,
            features: reducedFeatures
                ? new Map(reducedFeatures.map((r) => [r.id(), r]))
                : results.features,
            height,
            width,
            containsNoTransferables: true,
        };
    }
}
