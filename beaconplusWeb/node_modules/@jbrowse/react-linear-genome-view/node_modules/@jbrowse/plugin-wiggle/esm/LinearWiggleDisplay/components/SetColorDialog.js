import React, { useState } from 'react';
import { observer } from 'mobx-react';
import { Button, DialogContent, DialogActions, FormControlLabel, Radio, Typography, } from '@mui/material';
import { Dialog } from '@jbrowse/core/ui';
import { ColorPicker } from '@jbrowse/core/ui/ColorPicker';
const SetColorDialog = observer(function SetColorDialog({ model, handleClose, }) {
    const [posneg, setPosNeg] = useState(false);
    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: "Set color" },
        React.createElement(DialogContent, null,
            React.createElement(Typography, null, "Select either an overall color, or the positive/negative colors. Note that density renderers only work properly with positive/negative colors"),
            React.createElement(FormControlLabel, { checked: !posneg, onClick: () => setPosNeg(false), control: React.createElement(Radio, null), label: 'Overall color' }),
            React.createElement(FormControlLabel, { checked: posneg, onClick: () => setPosNeg(true), control: React.createElement(Radio, null), label: 'Positive/negative color' }),
            posneg ? (React.createElement(React.Fragment, null,
                React.createElement(Typography, null, "Positive color"),
                React.createElement(ColorPicker, { color: model.posColor || 'black', onChange: event => {
                        model.setPosColor(event);
                        model.setColor(undefined);
                    } }),
                React.createElement(Typography, null, "Negative color"),
                React.createElement(ColorPicker, { color: model.negColor || 'black', onChange: event => {
                        model.setNegColor(event);
                        model.setColor(undefined);
                    } }))) : (React.createElement(React.Fragment, null,
                React.createElement(Typography, null, "Overall color"),
                React.createElement(ColorPicker, { color: model.color || 'black', onChange: event => model.setColor(event) })))),
        React.createElement(DialogActions, null,
            React.createElement(Button, { onClick: () => {
                    model.setPosColor(undefined);
                    model.setNegColor(undefined);
                    model.setColor(undefined);
                }, color: "secondary", variant: "contained" }, "Restore default"),
            React.createElement(Button, { variant: "contained", color: "primary", type: "submit", onClick: () => handleClose() }, "Submit"))));
});
export default SetColorDialog;
