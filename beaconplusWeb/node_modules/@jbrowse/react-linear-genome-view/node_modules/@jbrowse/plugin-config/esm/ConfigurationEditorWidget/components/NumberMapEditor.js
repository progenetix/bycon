import React, { useState } from 'react';
import { observer } from 'mobx-react';
import { Card, CardContent, CardHeader, FormHelperText, IconButton, InputAdornment, InputLabel, TextField, } from '@mui/material';
import { makeStyles } from 'tss-react/mui';
// icons
import DeleteIcon from '@mui/icons-material/Delete';
import AddIcon from '@mui/icons-material/Add';
import NumberEditor from './NumberEditor';
const useStyles = makeStyles()(theme => ({
    card: {
        marginTop: theme.spacing(1),
    },
}));
const NumberMapEditor = observer(function ({ slot, }) {
    const { classes } = useStyles();
    const [value, setValue] = useState('');
    return (React.createElement(React.Fragment, null,
        React.createElement(InputLabel, null, slot.name),
        [...slot.value].map(([key, val]) => (React.createElement(Card, { raised: true, key: key, className: classes.card },
            React.createElement(CardHeader, { title: key, action: React.createElement(IconButton, { onClick: () => slot.remove(key) },
                    React.createElement(DeleteIcon, null)) }),
            React.createElement(CardContent, null,
                React.createElement(NumberEditor, { slot: {
                        value: val,
                        set: (val) => slot.add(key, val),
                    } }))))),
        React.createElement(Card, { raised: true, className: classes.card },
            React.createElement(CardHeader, { disableTypography: true, title: React.createElement(TextField, { fullWidth: true, value: value, placeholder: "add new", onChange: event => setValue(event.target.value), InputProps: {
                        endAdornment: (React.createElement(InputAdornment, { position: "end" },
                            React.createElement(IconButton, { disabled: value === '', onClick: () => {
                                    slot.add(value, 0);
                                    setValue('');
                                } },
                                React.createElement(AddIcon, null)))),
                    } }) })),
        React.createElement(FormHelperText, null, slot.description)));
});
export default NumberMapEditor;
