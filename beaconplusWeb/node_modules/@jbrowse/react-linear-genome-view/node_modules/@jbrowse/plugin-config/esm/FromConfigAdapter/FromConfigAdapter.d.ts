import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';
import { Feature, SimpleFeatureSerialized } from '@jbrowse/core/util/simpleFeature';
import { NoAssemblyRegion } from '@jbrowse/core/util/types';
import { AnyConfigurationModel } from '@jbrowse/core/configuration';
import PluginManager from '@jbrowse/core/PluginManager';
import { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache';
export declare function makeFeatures(fdata: SimpleFeatureSerialized[]): Map<string, Feature[]>;
export default class FromConfigAdapter extends BaseFeatureDataAdapter {
    protected features: Map<string, Feature[]>;
    constructor(conf: AnyConfigurationModel, getSubAdapter?: getSubAdapterType, pluginManager?: PluginManager);
    getRefNames(): Promise<string[]>;
    getRefNameAliases(): Promise<{
        refName: string;
        aliases: any;
    }[]>;
    getFeatures(region: NoAssemblyRegion): import("rxjs").Observable<Feature>;
    freeResources(): void;
}
