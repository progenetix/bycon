import React, { useState } from 'react';
import { observer } from 'mobx-react';
import { Button, FormHelperText, IconButton, InputAdornment, InputLabel, List, ListItem, TextField, } from '@mui/material';
// icons
import DeleteIcon from '@mui/icons-material/Delete';
const StringArrayEditor = observer(function ({ slot, }) {
    const [value, setValue] = useState('');
    const [addNew, setAddNew] = useState(false);
    return (React.createElement(React.Fragment, null,
        slot.name ? React.createElement(InputLabel, null, slot.name) : null,
        React.createElement(List, { disablePadding: true },
            slot.value.map((val, idx) => (React.createElement(ListItem, { key: idx, disableGutters: true },
                React.createElement(TextField, { value: val, onChange: evt => slot.setAtIndex(idx, evt.target.value), InputProps: {
                        endAdornment: (React.createElement(InputAdornment, { position: "end" },
                            React.createElement(IconButton, { onClick: () => slot.removeAtIndex(idx) },
                                React.createElement(DeleteIcon, null)))),
                    } })))),
            addNew ? (React.createElement(ListItem, { disableGutters: true },
                React.createElement(TextField, { value: value, placeholder: "add new", onChange: event => setValue(event.target.value), InputProps: {
                        endAdornment: (React.createElement(InputAdornment, { position: "end" },
                            React.createElement(React.Fragment, null,
                                React.createElement(Button, { color: "primary", variant: "contained", style: { margin: 2 }, "data-testid": `stringArrayAdd-${slot.name}`, onClick: () => {
                                        setAddNew(false);
                                        slot.add(value);
                                        setValue('');
                                    } }, "OK"),
                                React.createElement(Button, { color: "primary", variant: "contained", style: { margin: 2 }, onClick: () => {
                                        setAddNew(false);
                                        setValue('');
                                    } }, "Cancel")))),
                    } }))) : null,
            React.createElement(Button, { color: "primary", variant: "contained", style: { margin: 4 }, disabled: addNew, onClick: () => setAddNew(true) }, "Add item")),
        React.createElement(FormHelperText, null, slot.description)));
});
export default StringArrayEditor;
