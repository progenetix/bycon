import React from 'react';
import { Button, DialogContent, DialogActions, IconButton, Tooltip, Typography, } from '@mui/material';
import { Dialog } from '@jbrowse/core/ui';
import { makeStyles } from 'tss-react/mui';
import { observer } from 'mobx-react';
import { readConfObject, } from '@jbrowse/core/configuration';
// icons
import CloseIcon from '@mui/icons-material/Close';
const useStyles = makeStyles()(theme => ({
    connectionContainer: {
        margin: theme.spacing(4),
        width: 500,
    },
}));
function DisabledButton() {
    return (React.createElement(Tooltip, { title: "Unable to delete connection in config file as non-admin user" },
        React.createElement(IconButton, null,
            React.createElement(CloseIcon, { color: "disabled" }))));
}
const ManageConnectionsDialog = observer(function ({ session, handleClose, breakConnection, }) {
    const { classes } = useStyles();
    const { adminMode, connections, sessionConnections } = session;
    return (React.createElement(Dialog, { open: true, onClose: handleClose, maxWidth: "lg", title: "Delete connections" },
        React.createElement(DialogContent, null,
            React.createElement(Typography, null, "Click the X icon to delete the connection from your config completely"),
            React.createElement("div", { className: classes.connectionContainer },
                connections.map(conf => {
                    const name = readConfObject(conf, 'name');
                    return (React.createElement(Typography, { key: `conn-${name}` },
                        adminMode || (sessionConnections === null || sessionConnections === void 0 ? void 0 : sessionConnections.includes(conf)) ? (React.createElement(IconButton, { onClick: () => breakConnection(conf, true) },
                            React.createElement(CloseIcon, { color: "error" }))) : (React.createElement(DisabledButton, null)),
                        name));
                }),
                !connections.length ? (React.createElement(Typography, null, "No connections found")) : null)),
        React.createElement(DialogActions, null,
            React.createElement(Button, { onClick: () => handleClose(), variant: "contained", color: "primary" }, "Close"))));
});
export default ManageConnectionsDialog;
