import React from 'react';
import { observer } from 'mobx-react';
import { IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, } from '@mui/material';
import { readConfObject, } from '@jbrowse/core/configuration';
import CreateIcon from '@mui/icons-material/Create';
import DeleteIcon from '@mui/icons-material/Delete';
const AssemblyTable = observer(function ({ rootModel, setIsAssemblyBeingEdited, setAssemblyBeingEdited, }) {
    function removeAssembly(name) {
        rootModel.jbrowse.removeAssemblyConf(name);
    }
    const { assemblies } = rootModel.jbrowse;
    return (React.createElement(TableContainer, { component: Paper },
        React.createElement(Table, null,
            React.createElement(TableHead, null,
                React.createElement(TableRow, null,
                    React.createElement(TableCell, null, "Name"),
                    React.createElement(TableCell, null, "Display name"),
                    React.createElement(TableCell, null, "Aliases"),
                    React.createElement(TableCell, null, "Actions"))),
            React.createElement(TableBody, null, assemblies.map(assembly => {
                const name = readConfObject(assembly, 'name');
                const displayName = readConfObject(assembly, 'displayName');
                const aliases = readConfObject(assembly, 'aliases');
                return (React.createElement(TableRow, { key: name },
                    React.createElement(TableCell, null, name),
                    React.createElement(TableCell, null, displayName),
                    React.createElement(TableCell, null, aliases ? aliases.toString() : ''),
                    React.createElement(TableCell, null,
                        React.createElement(IconButton, { "data-testid": `${name}-edit`, onClick: () => {
                                setIsAssemblyBeingEdited(true);
                                setAssemblyBeingEdited(assembly);
                            } },
                            React.createElement(CreateIcon, { color: "primary" })),
                        React.createElement(IconButton, { "data-testid": `${name}-delete`, onClick: () => removeAssembly(name) },
                            React.createElement(DeleteIcon, { color: "error" })))));
            })))));
});
export default AssemblyTable;
