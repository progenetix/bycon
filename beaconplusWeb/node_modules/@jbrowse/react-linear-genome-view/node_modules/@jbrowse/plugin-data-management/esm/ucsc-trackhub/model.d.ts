import PluginManager from '@jbrowse/core/PluginManager';
/**
 * #stateModel UCSCTrackHubConnection
 * extends BaseConnectionModel
 */
export default function UCSCTrackHubConnection(pluginManager: PluginManager): import("mobx-state-tree").IModelType<{
    name: import("mobx-state-tree").ISimpleType<string>;
    tracks: import("mobx-state-tree").IArrayType<import("mobx-state-tree").IAnyModelType>;
    configuration: import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaType<{
        name: {
            type: string;
            defaultValue: string;
            description: string;
        };
        assemblyNames: {
            type: string;
            defaultValue: never[]; /**
             * #action
             */
            description: string;
        };
    }, import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaOptions<undefined, "connectionId">>;
} & {
    /**
     * #property
     */
    configuration: import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaType<{
        hubTxtLocation: {
            type: string;
            defaultValue: {
                uri: string;
                locationType: string;
            };
            description: string;
        };
        assemblyNames: {
            type: string; /**
             * #property
             */
            defaultValue: never[];
            description: string;
        };
    }, import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaOptions<import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaType<{
        name: {
            type: string;
            defaultValue: string;
            description: string;
        };
        assemblyNames: {
            type: string;
            defaultValue: never[];
            description: string;
        };
    }, import("@jbrowse/core/configuration/configurationSchema").ConfigurationSchemaOptions<undefined, "connectionId">>, undefined>>;
    /**
     * #property
     */
    type: import("mobx-state-tree").ISimpleType<"UCSCTrackHubConnection">;
}, {
    connect(_arg: {
        [x: string]: any;
    } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
        setSubschema(slotName: string, data: unknown): any;
    } & import("mobx-state-tree").IStateTreeNode<import("@jbrowse/core/configuration").AnyConfigurationSchemaType>): void;
} & {
    afterAttach(): void;
    addTrackConf(trackConf: {
        [x: string]: any;
    } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
        setSubschema(slotName: string, data: unknown): any;
    } & import("mobx-state-tree").IStateTreeNode<import("@jbrowse/core/configuration").AnyConfigurationSchemaType>): any;
    addTrackConfs(trackConfs: ({
        [x: string]: any;
    } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
        setSubschema(slotName: string, data: unknown): any;
    } & import("mobx-state-tree").IStateTreeNode<import("@jbrowse/core/configuration").AnyConfigurationSchemaType>)[]): any[];
    setTrackConfs(trackConfs: ({
        [x: string]: any;
    } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
        setSubschema(slotName: string, data: unknown): any;
    } & import("mobx-state-tree").IStateTreeNode<import("@jbrowse/core/configuration").AnyConfigurationSchemaType>)[]): import("mobx-state-tree").IMSTArray<import("mobx-state-tree").IAnyModelType> & import("mobx-state-tree").IStateTreeNode<import("mobx-state-tree").IArrayType<import("mobx-state-tree").IAnyModelType>>;
    clear(): void;
} & {
    /**
     * #action
     */
    connect(): Promise<void>;
}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>;
