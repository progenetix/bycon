import React, { useState } from 'react';
import { Grid, IconButton, InputAdornment, TextField } from '@mui/material';
import { Menu } from '@jbrowse/core/ui';
// icons
import ClearIcon from '@mui/icons-material/Clear';
import MoreVert from '@mui/icons-material/MoreVert';
// locals
import ShoppingCart from '../ShoppingCart';
export default function FacetedHeader({ model, }) {
    const { faceted } = model;
    const [anchorEl, setAnchorEl] = useState(null);
    const { showOptions, showFilters, showSparse, useShoppingCart } = faceted;
    return (React.createElement(React.Fragment, null,
        React.createElement(Grid, { container: true, spacing: 4, alignItems: "center" },
            React.createElement(Grid, { item: true },
                React.createElement(TextField, { label: "Search...", value: faceted.filterText, onChange: event => faceted.setFilterText(event.target.value), InputProps: {
                        endAdornment: (React.createElement(InputAdornment, { position: "end" },
                            React.createElement(IconButton, { onClick: () => faceted.setFilterText('') },
                                React.createElement(ClearIcon, null)))),
                    } })),
            React.createElement(Grid, { item: true },
                React.createElement(IconButton, { onClick: event => setAnchorEl(event.currentTarget) },
                    React.createElement(MoreVert, null))),
            React.createElement(Grid, { item: true },
                React.createElement(ShoppingCart, { model: model }))),
        React.createElement(Menu, { anchorEl: anchorEl, open: !!anchorEl, onClose: () => setAnchorEl(null), onMenuItemClick: (_event, callback) => {
                callback();
                setAnchorEl(null);
            }, menuItems: [
                {
                    label: 'Add tracks to selection instead of turning them on/off',
                    onClick: () => faceted.setUseShoppingCart(!useShoppingCart),
                    type: 'checkbox',
                    checked: useShoppingCart,
                },
                {
                    label: 'Show sparse metadata columns',
                    onClick: () => faceted.setShowSparse(!showSparse),
                    checked: showSparse,
                    type: 'checkbox',
                },
                {
                    label: 'Show facet filters',
                    onClick: () => faceted.setShowFilters(!showFilters),
                    checked: showFilters,
                    type: 'checkbox',
                },
                {
                    label: 'Show extra table options',
                    onClick: () => faceted.setShowOptions(!showOptions),
                    checked: showOptions,
                    type: 'checkbox',
                },
            ] })));
}
