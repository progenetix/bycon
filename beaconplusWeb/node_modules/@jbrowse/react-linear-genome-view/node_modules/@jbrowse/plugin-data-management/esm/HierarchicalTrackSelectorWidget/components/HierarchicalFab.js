import React, { useState } from 'react';
import { Fab, Menu, MenuItem } from '@mui/material';
import { makeStyles } from 'tss-react/mui';
import { getSession, isSessionModelWithWidgets, isSessionModelWithConnections, isSessionWithAddTracks, } from '@jbrowse/core/util';
import { observer } from 'mobx-react';
// icons
import AddIcon from '@mui/icons-material/Add';
const useStyles = makeStyles()(theme => ({
    fab: {
        position: 'absolute',
        bottom: theme.spacing(6),
        right: theme.spacing(6),
    },
}));
const HierarchicalFab = observer(function ({ model, }) {
    const { classes } = useStyles();
    const session = getSession(model);
    const [anchorEl, setAnchorEl] = useState(null);
    function handleFabClose() {
        setAnchorEl(null);
    }
    const hasConnections = isSessionModelWithConnections(session);
    const hasAddTrack = isSessionWithAddTracks(session);
    return hasAddTrack || hasConnections ? (React.createElement(React.Fragment, null,
        React.createElement(Fab, { color: "secondary", className: classes.fab, onClick: event => setAnchorEl(event.currentTarget) },
            React.createElement(AddIcon, null)),
        React.createElement(Menu, { anchorEl: anchorEl, open: Boolean(anchorEl), onClose: () => setAnchorEl(null) },
            hasConnections ? (React.createElement(MenuItem, { onClick: () => {
                    handleFabClose();
                    if (isSessionModelWithWidgets(session)) {
                        session.showWidget(session.addWidget('AddConnectionWidget', 'addConnectionWidget'));
                    }
                } }, "Add connection")) : null,
            hasAddTrack ? (React.createElement(MenuItem, { onClick: () => {
                    handleFabClose();
                    if (isSessionModelWithWidgets(session)) {
                        session.showWidget(session.addWidget('AddTrackWidget', 'addTrackWidget', {
                            view: model.view.id,
                        }));
                    }
                } }, "Add track")) : null))) : null;
});
export default HierarchicalFab;
