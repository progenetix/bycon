import React, { useState } from 'react';
import { observer } from 'mobx-react';
import { Button, DialogActions, DialogContent } from '@mui/material';
import { Dialog } from '@jbrowse/core/ui';
// icons
import AddIcon from '@mui/icons-material/Add';
// locals
import AssemblyTable from './AssemblyTable';
import AssemblyAddForm from './AssemblyAddForm';
import AssemblyEditor from './AssemblyEditor';
const AssemblyManager = observer(function ({ rootModel, onClose, }) {
    const [isFormOpen, setFormOpen] = useState(false);
    const [isAssemblyBeingEdited, setIsAssemblyBeingEdited] = useState(false);
    const [assemblyBeingEdited, setAssemblyBeingEdited] = useState();
    const showAssemblyTable = !isFormOpen && !isAssemblyBeingEdited;
    return (React.createElement(Dialog, { open: true, onClose: () => onClose(false), title: "Assembly manager" },
        React.createElement(DialogContent, null,
            showAssemblyTable ? (React.createElement(AssemblyTable, { rootModel: rootModel, setIsAssemblyBeingEdited: setIsAssemblyBeingEdited, setAssemblyBeingEdited: setAssemblyBeingEdited })) : null,
            isAssemblyBeingEdited ? (React.createElement(AssemblyEditor, { assembly: assemblyBeingEdited })) : null,
            isFormOpen ? (React.createElement(AssemblyAddForm, { rootModel: rootModel, setFormOpen: setFormOpen })) : null),
        React.createElement(DialogActions, null,
            isFormOpen ? (React.createElement(Button, { variant: "contained", onClick: () => setFormOpen(false) }, "Back")) : null,
            isAssemblyBeingEdited ? (React.createElement(Button, { variant: "contained", onClick: () => setIsAssemblyBeingEdited(false) }, "Back")) : null,
            showAssemblyTable ? (React.createElement(React.Fragment, null,
                React.createElement(Button, { color: "secondary", variant: "contained", onClick: () => onClose(false) }, "Close"),
                React.createElement(Button, { variant: "contained", startIcon: React.createElement(AddIcon, null), onClick: () => setFormOpen(true) }, "Add new assembly"))) : null)));
});
export default AssemblyManager;
