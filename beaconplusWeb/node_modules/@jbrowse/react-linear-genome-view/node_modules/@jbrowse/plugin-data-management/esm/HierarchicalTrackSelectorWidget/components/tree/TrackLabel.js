import React from 'react';
import { Checkbox, FormControlLabel, Tooltip } from '@mui/material';
import { makeStyles } from 'tss-react/mui';
import SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML';
import { readConfObject, } from '@jbrowse/core/configuration';
// locals
import { isUnsupported } from '../util';
import TrackLabelMenu from './TrackLabelMenu';
const useStyles = makeStyles()(theme => ({
    compactCheckbox: {
        padding: 0,
    },
    checkboxLabel: {
        marginRight: 0,
        '&:hover': {
            backgroundColor: theme.palette.action.selected,
        },
    },
    selected: {
        background: '#cccc',
    },
}));
export default function TrackLabel({ data }) {
    const { classes } = useStyles();
    const { checked, conf, model, drawerPosition, id, trackId, name, onChange, selected, } = data;
    const description = (conf && readConfObject(conf, 'description')) || '';
    return (React.createElement(React.Fragment, null,
        React.createElement(Tooltip, { title: description + (selected ? ' (in selection)' : ''), placement: drawerPosition === 'left' ? 'right' : 'left' },
            React.createElement(FormControlLabel, { className: classes.checkboxLabel, control: React.createElement(Checkbox, { className: classes.compactCheckbox, checked: checked, onChange: () => onChange(trackId), disabled: isUnsupported(name), inputProps: {
                        // @ts-expect-error
                        'data-testid': `htsTrackEntry-${id}`,
                    } }), label: React.createElement("div", { "data-testid": `htsTrackLabel-${id}`, style: { background: selected ? '#cccc' : undefined } },
                    React.createElement(SanitizedHTML, { html: name })) })),
        React.createElement(TrackLabelMenu, { model: model, trackId: trackId, id: id, conf: conf })));
}
