export declare function renderReactionData(self: any): {
    rendererType: any;
    rpcManager: import("@jbrowse/core/rpc/RpcManager").default;
    renderProps: any;
    renderArgs: {
        assemblyName: string;
        adapterConfig: any;
        rendererType: any;
        regions: import("mobx-state-tree").IMSTArray<import("mobx-state-tree").IModelType<{
            refName: import("mobx-state-tree").ISimpleType<string>;
            start: import("mobx-state-tree").ISimpleType<number>;
            end: import("mobx-state-tree").ISimpleType<number>;
            reversed: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<boolean>, [undefined]>;
        } & {
            assemblyName: import("mobx-state-tree").ISimpleType<string>;
        }, {
            setRefName(newRefName: string): void;
        }, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>> & import("mobx-state-tree").IStateTreeNode<import("mobx-state-tree").IArrayType<import("mobx-state-tree").IModelType<{
            refName: import("mobx-state-tree").ISimpleType<string>;
            start: import("mobx-state-tree").ISimpleType<number>;
            end: import("mobx-state-tree").ISimpleType<number>;
            reversed: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<boolean>, [undefined]>;
        } & {
            assemblyName: import("mobx-state-tree").ISimpleType<string>;
        }, {
            setRefName(newRefName: string): void;
        }, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>>>;
        blockDefinitions: any;
        sessionId: string;
        timeout: number;
    };
};
export declare function renderReactionEffect(props: any, signal: AbortSignal | undefined, self: any): Promise<{
    message: any;
    html?: undefined;
    data?: undefined;
    reactElement?: undefined;
    renderingComponent?: undefined;
} | {
    html: any;
    data: any;
    reactElement: any;
    renderingComponent: any;
    message?: undefined;
}>;
