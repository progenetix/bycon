import { types } from 'mobx-state-tree';
import { getSession } from '@jbrowse/core/util';
import { getRpcSessionId } from '@jbrowse/core/util/tracks';
export async function getUniqueTagValues(self, colorScheme, blocks, opts) {
    const { rpcManager } = getSession(self);
    const { adapterConfig } = self;
    const sessionId = getRpcSessionId(self);
    const values = await rpcManager.call(getRpcSessionId(self), 'PileupGetGlobalValueForTag', {
        adapterConfig,
        tag: colorScheme.tag,
        sessionId,
        regions: blocks.contentBlocks,
        ...opts,
    });
    return values;
}
export async function getUniqueModificationValues(self, adapterConfig, colorScheme, blocks, opts) {
    const { rpcManager } = getSession(self);
    const sessionId = getRpcSessionId(self);
    const values = await rpcManager.call(sessionId, 'PileupGetVisibleModifications', {
        adapterConfig,
        tag: colorScheme.tag,
        sessionId,
        regions: blocks.contentBlocks,
        ...opts,
    });
    return values;
}
export const FilterModel = types.model({
    flagInclude: types.optional(types.number, 0),
    flagExclude: types.optional(types.number, 1540),
    readName: types.maybe(types.string),
    tagFilter: types.maybe(types.model({
        tag: types.string,
        value: types.string,
    })),
});
