import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache';
import { toArray } from 'rxjs/operators';
import { firstValueFrom } from 'rxjs';
// locals
import PileupBaseRPC from '../base';
import { getTag } from '../../util';
export default class PileupGetGlobalValueForTag extends PileupBaseRPC {
    constructor() {
        super(...arguments);
        this.name = 'PileupGetGlobalValueForTag';
    }
    async execute(args, rpcDriver) {
        const { adapterConfig, sessionId, regions, tag } = await this.deserializeArguments(args, rpcDriver);
        const dataAdapter = (await getAdapter(this.pluginManager, sessionId, adapterConfig)).dataAdapter;
        const features = dataAdapter.getFeaturesInMultipleRegions(regions);
        const featuresArray = await firstValueFrom(features.pipe(toArray()));
        return [
            ...new Set(featuresArray
                .map(feature => getTag(feature, tag))
                .filter(f => f !== undefined)
                .map(f => `${f}`)),
        ];
    }
}
