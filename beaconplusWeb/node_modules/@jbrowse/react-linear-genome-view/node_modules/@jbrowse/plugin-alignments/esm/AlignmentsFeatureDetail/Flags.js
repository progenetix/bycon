import React from 'react';
import { Checkbox, FormControlLabel, FormGroup } from '@mui/material';
import { makeStyles } from 'tss-react/mui';
import { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail';
import SimpleField from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField';
const useStyles = makeStyles()({
    compact: {
        paddingRight: 0,
        paddingTop: 0,
        paddingBottom: 0,
    },
});
const flagNames = [
    'read paired',
    'read mapped in proper pair',
    'read unmapped',
    'mate unmapped',
    'read reverse strand',
    'mate reverse strand',
    'first in pair',
    'second in pair',
    'not primary alignment',
    'read fails platform/vendor quality checks',
    'read is PCR or optical duplicate',
    'supplementary alignment',
];
export default function AlignmentFlags(props) {
    const { classes } = useStyles();
    const { feature } = props;
    const { flags } = feature;
    return (React.createElement(BaseCard, { ...props, title: "Flags" },
        React.createElement(SimpleField, { name: "Flag", value: flags }),
        React.createElement(FormGroup, null, flagNames.map((name, idx) => {
            const val = flags & (1 << idx);
            const key = `${name}_${val}`;
            return (React.createElement(FormControlLabel, { key: key, control: React.createElement(Checkbox, { className: classes.compact, checked: Boolean(val), name: name, readOnly: true }), label: name }));
        }))));
}
