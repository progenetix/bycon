import React from 'react';
import { Paper } from '@mui/material';
import { observer } from 'mobx-react';
import clone from 'clone';
import { FeatureDetails } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail';
// locals
import { getTag } from './util';
import { tags } from './tagInfo';
// local components
import SuppAlignments from './SuppAlignments';
import Flags from './Flags';
import PairLink from './PairLink';
import Formatter from './Formatter';
const omit = ['clipPos', 'flags'];
const AlignmentsFeatureDetails = observer(function (props) {
    const { model } = props;
    const feat = clone(model.featureData);
    const SA = getTag('SA', feat);
    return (React.createElement(Paper, { "data-testid": "alignment-side-drawer" },
        React.createElement(FeatureDetails, { ...props, omit: omit, 
            // @ts-expect-error
            descriptions: { ...tags, tags: tags }, feature: feat, formatter: (value, key) => key === 'next_segment_position' ? (React.createElement(PairLink, { model: model, locString: value })) : (React.createElement(Formatter, { value: value })) }),
        SA ? React.createElement(SuppAlignments, { model: model, tag: SA, feature: feat }) : null,
        feat.flags !== undefined ? React.createElement(Flags, { feature: feat, ...props }) : null));
});
export default AlignmentsFeatureDetails;
