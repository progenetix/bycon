import { measureText } from '@jbrowse/core/util';
export function fillRect(ctx, l, t, w, h, cw, color) {
    if (l + w < 0 || l > cw) {
        return;
    }
    else {
        if (color) {
            ctx.fillStyle = color;
        }
        ctx.fillRect(l, t, w, h);
    }
}
export function getColorBaseMap(theme) {
    const { bases } = theme.palette;
    return {
        A: bases.A.main,
        C: bases.C.main,
        G: bases.G.main,
        T: bases.T.main,
        deletion: '#808080', // gray
    };
}
export function getContrastBaseMap(theme) {
    return Object.fromEntries(Object.entries(getColorBaseMap(theme)).map(([key, value]) => [
        key,
        theme.palette.getContrastText(value),
    ]));
}
export function shouldDrawSNPsMuted(type) {
    return ['methylation', 'modifications'].includes(type || '');
}
export function shouldDrawIndels() {
    return true;
}
// get width and height of chars the height is an approximation: width letter M
// is approximately the height
export function getCharWidthHeight() {
    const charWidth = measureText('A');
    const charHeight = measureText('M') - 2;
    return { charWidth, charHeight };
}
