import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache';
import { toArray } from 'rxjs/operators';
import { firstValueFrom } from 'rxjs';
// locals
import { getModificationTypes } from '../../MismatchParser';
import PileupBaseRPC from '../base';
import { getTagAlt } from '../../util';
export default class PileupGetVisibleModifications extends PileupBaseRPC {
    constructor() {
        super(...arguments);
        this.name = 'PileupGetVisibleModifications';
    }
    async execute(args, rpcDriver) {
        const { adapterConfig, sessionId, regions } = await this.deserializeArguments(args, rpcDriver);
        const dataAdapter = (await getAdapter(this.pluginManager, sessionId, adapterConfig)).dataAdapter;
        const featuresArray = await firstValueFrom(dataAdapter.getFeaturesInMultipleRegions(regions).pipe(toArray()));
        const uniqueValues = new Set();
        featuresArray.forEach(f => {
            getModificationTypes(getTagAlt(f, 'MM', 'Mm') || '').forEach(t => uniqueValues.add(t));
        });
        return [...uniqueValues];
    }
}
