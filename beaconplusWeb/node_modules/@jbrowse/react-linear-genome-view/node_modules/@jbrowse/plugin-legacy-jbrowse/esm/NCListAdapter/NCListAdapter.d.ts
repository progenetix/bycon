import { Region } from '@jbrowse/core/util/types';
import { BaseFeatureDataAdapter, BaseOptions } from '@jbrowse/core/data_adapters/BaseAdapter';
import { Feature } from '@jbrowse/core/util/simpleFeature';
import NCListFeature from './NCListFeature';
import PluginManager from '@jbrowse/core/PluginManager';
import { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache';
import { AnyConfigurationModel } from '@jbrowse/core/configuration';
export default class NCListAdapter extends BaseFeatureDataAdapter {
    private nclist;
    private configRefNames?;
    constructor(config: AnyConfigurationModel, getSubAdapter?: getSubAdapterType, pluginManager?: PluginManager);
    /**
     * Fetch features for a certain region. Use getFeaturesInRegion() if you also
     * want to verify that the store has features for the given reference sequence
     * before fetching.
     * @param region -
     * @param opts - [signal] optional signalling object for aborting the fetch
     * @returns Observable of Feature objects in the region
     */
    getFeatures(region: Region, opts?: BaseOptions): import("rxjs").Observable<Feature>;
    wrapFeature(ncFeature: any): NCListFeature;
    hasDataForRefName(refName: string): Promise<boolean>;
    /**
     * NCList is unable to get list of ref names so returns empty
     */
    getRefNames(): Promise<string[]>;
    /**
     * called to provide a hint that data tied to a certain region
     * will not be needed for the foreseeable future and can be purged
     * from caches, etc
     */
    freeResources(): void;
}
