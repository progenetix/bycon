import React, { useRef } from 'react';
import { observer } from 'mobx-react';
import { makeStyles } from 'tss-react/mui';
import { Menu } from '@jbrowse/core/ui';
// locals
import VerticalGuide from './VerticalGuide';
import RubberbandSpan from './RubberbandSpan';
import { useRangeSelect } from './hooks';
const useStyles = makeStyles()({
    rubberbandControl: {
        cursor: 'crosshair',
        width: '100%',
        minHeight: 8,
    },
});
const Rubberband = observer(function ({ model, ControlComponent = React.createElement("div", null), }) {
    const ref = useRef(null);
    const { classes } = useStyles();
    const { guideX, rubberbandOn, leftBpOffset, rightBpOffset, numOfBpSelected, width, left, anchorPosition, handleMenuItemClick, open, handleClose, mouseMove, mouseDown, mouseOut, } = useRangeSelect(ref, model);
    return (React.createElement(React.Fragment, null,
        guideX !== undefined ? (React.createElement(VerticalGuide, { model: model, coordX: guideX })) : rubberbandOn ? (React.createElement(RubberbandSpan, { leftBpOffset: leftBpOffset, rightBpOffset: rightBpOffset, numOfBpSelected: numOfBpSelected, width: width, left: left })) : null,
        anchorPosition ? (React.createElement(Menu, { anchorReference: "anchorPosition", anchorPosition: {
                left: anchorPosition.clientX,
                top: anchorPosition.clientY,
            }, onMenuItemClick: handleMenuItemClick, open: open, onClose: handleClose, menuItems: model.rubberBandMenuItems() })) : null,
        React.createElement("div", { "data-testid": "rubberband_controls", className: classes.rubberbandControl, ref: ref, onMouseDown: mouseDown, onMouseMove: mouseMove, onMouseOut: mouseOut }, ControlComponent)));
});
export default Rubberband;
