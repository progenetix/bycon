import React, { useState } from 'react';
import { observer } from 'mobx-react';
import { Dialog } from '@jbrowse/core/ui';
import { Button, DialogActions, DialogContent, Typography, TextField, } from '@mui/material';
import { makeStyles } from 'tss-react/mui';
const useStyles = makeStyles()({
    root: {
        width: 500,
    },
});
const SetMaxHeightDialog = observer(function ({ model, handleClose, }) {
    const { classes } = useStyles();
    const { maxHeight = '' } = model;
    const [max, setMax] = useState(`${maxHeight}`);
    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: "Set max height" },
        React.createElement(DialogContent, { className: classes.root },
            React.createElement(Typography, null, "Set max height for the track. For example, you can increase this if the layout says \"Max height reached\""),
            React.createElement(TextField, { value: max, onChange: event => setMax(event.target.value), placeholder: "Enter max score" }),
            React.createElement(DialogActions, null,
                React.createElement(Button, { variant: "contained", color: "primary", type: "submit", autoFocus: true, onClick: () => {
                        model.setMaxHeight(max !== '' && !Number.isNaN(+max) ? +max : undefined);
                        handleClose();
                    } }, "Submit"),
                React.createElement(Button, { variant: "contained", color: "secondary", onClick: () => handleClose() }, "Cancel")))));
});
export default SetMaxHeightDialog;
