import React, { Suspense } from 'react';
import { AppBar, Paper, Toolbar, Typography } from '@mui/material';
import { Dialog } from '@jbrowse/core/ui';
import { makeStyles } from 'tss-react/mui';
import { observer } from 'mobx-react';
import { getEnv } from 'mobx-state-tree';
const useStyles = makeStyles()({
    paper: {
        overflow: 'auto',
    },
});
const ModalWidget = observer(function ({ session, }) {
    const { classes } = useStyles();
    const { visibleWidget } = session;
    const { pluginManager } = getEnv(session);
    if (!visibleWidget) {
        return null;
    }
    const { ReactComponent, HeadingComponent, heading } = pluginManager.getWidgetType(visibleWidget.type);
    const Component = visibleWidget
        ? pluginManager.evaluateExtensionPoint('Core-replaceWidget', ReactComponent, {
            session,
            model: visibleWidget,
        })
        : null;
    return (React.createElement(Dialog, { open: true, onClose: () => session.hideAllWidgets(), maxWidth: "xl", header: React.createElement(AppBar, { position: "static" },
            React.createElement(Toolbar, null, HeadingComponent ? (React.createElement(HeadingComponent, { model: visibleWidget })) : (React.createElement(Typography, { variant: "h6" }, heading)))) }, Component ? (React.createElement(Suspense, { fallback: React.createElement("div", null, "Loading...") },
        React.createElement(Paper, { className: classes.paper },
            React.createElement(Component, { model: visibleWidget, session: session, overrideDimensions: {
                    height: (window.innerHeight * 5) / 8,
                    width: 800,
                } })))) : null));
});
export default ModalWidget;
