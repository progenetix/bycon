import React, { Suspense } from 'react';
import { Paper, ScopedCssBaseline, useTheme } from '@mui/material';
import { makeStyles } from 'tss-react/mui';
import { observer } from 'mobx-react';
import { getSession, useWidthSetter } from '@jbrowse/core/util';
import ViewTitle from './ViewTitle';
const useStyles = makeStyles()(theme => ({
    // avoid parent styles getting into this div
    // https://css-tricks.com/almanac/properties/a/all/
    avoidParentStyle: {
        all: 'initial',
    },
    viewContainer: {
        overflow: 'hidden',
        background: theme.palette.secondary.main,
        margin: theme.spacing(0.5),
        padding: `0 ${theme.spacing(1)} ${theme.spacing(1)}`,
    },
}));
const ViewContainer = observer(function ({ view, children, }) {
    const { classes } = useStyles();
    const session = getSession(view);
    const theme = useTheme();
    const ref = useWidthSetter(view, theme.spacing(1));
    return (React.createElement(Paper, { elevation: 12, ref: ref, className: classes.viewContainer },
        session.DialogComponent ? (React.createElement(Suspense, { fallback: null },
            React.createElement(session.DialogComponent, { ...session.DialogProps }))) : null,
        React.createElement(ViewTitle, { view: view }),
        React.createElement(Paper, null, children)));
});
const ViewContainerWrapper = observer(function ({ view, children, }) {
    const { classes } = useStyles();
    return (React.createElement("div", { className: classes.avoidParentStyle },
        React.createElement(ScopedCssBaseline, null,
            React.createElement(ViewContainer, { view: view }, children))));
});
export default ViewContainerWrapper;
