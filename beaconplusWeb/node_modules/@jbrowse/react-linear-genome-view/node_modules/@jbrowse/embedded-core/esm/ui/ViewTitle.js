import React, { Suspense, lazy, useState } from 'react';
import { IconButton, Typography, alpha } from '@mui/material';
import { observer } from 'mobx-react';
import { Logomark } from '@jbrowse/core/ui';
import { makeStyles } from 'tss-react/mui';
import { getSession } from '@jbrowse/core/util';
// locals
import ViewMenu from './ViewMenu';
const VersionAboutDialog = lazy(() => import('./VersionAboutDialog'));
const useStyles = makeStyles()(theme => ({
    icon: {
        color: theme.palette.secondary.contrastText,
    },
    displayName: {
        marginTop: 2,
        color: theme.palette.secondary.contrastText,
    },
    grow: {
        flexGrow: 1,
    },
    container: {
        display: 'flex',
    },
    iconRoot: {
        '&:hover': {
            backgroundColor: alpha(theme.palette.secondary.contrastText, theme.palette.action.hoverOpacity),
            '@media (hover: none)': {
                backgroundColor: 'transparent',
            },
        },
    },
}));
const ViewTitle = observer(({ view }) => {
    const { classes } = useStyles();
    const { displayName } = view;
    const [dialogOpen, setDialogOpen] = useState(false);
    const session = getSession(view);
    return (React.createElement("div", { className: classes.container },
        React.createElement(ViewMenu, { model: view, IconButtonProps: {
                classes: { root: classes.iconRoot },
                edge: 'start',
            }, IconProps: { className: classes.icon } }),
        React.createElement("div", { className: classes.grow }),
        displayName ? (React.createElement(Typography, { variant: "body2", className: classes.displayName }, displayName)) : null,
        React.createElement("div", { className: classes.grow }),
        React.createElement(IconButton, { onClick: () => setDialogOpen(true) },
            React.createElement("div", { style: { width: 22, height: 22 } },
                React.createElement(Logomark, { variant: "white" }))),
        dialogOpen ? (React.createElement(Suspense, { fallback: null },
            React.createElement(VersionAboutDialog, { open: true, onClose: () => setDialogOpen(false), version: session.version }))) : null));
});
export default ViewTitle;
