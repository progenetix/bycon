"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VictoryPie = void 0;

var _react = _interopRequireDefault(require("react"));

var _victoryCore = require("victory-core");

var _helperMethods = require("./helper-methods");

var _slice = require("./slice");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var fallbackProps = {
  endAngle: 360,
  height: 400,
  innerRadius: 0,
  cornerRadius: 0,
  padAngle: 0,
  padding: 30,
  width: 400,
  startAngle: 0,
  colorScale: ["#ffffff", "#f0f0f0", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525", "#000000"],
  labelPosition: "centroid",
  labelIndicatorInnerOffset: 15,
  labelIndicatorOuterOffset: 5
};

var datumHasXandY = function (datum) {
  return !_victoryCore.Helpers.isNil(datum._x) && !_victoryCore.Helpers.isNil(datum._y);
}; // eslint-disable-next-line @typescript-eslint/no-empty-interface


var VictoryPieBase = /*#__PURE__*/function (_React$Component) {
  _inherits(VictoryPieBase, _React$Component);

  var _super = _createSuper(VictoryPieBase);

  function VictoryPieBase() {
    _classCallCheck(this, VictoryPieBase);

    return _super.apply(this, arguments);
  }

  _createClass(VictoryPieBase, [{
    key: "shouldAnimate",
    value: // Overridden in victory-native
    function shouldAnimate() {
      return Boolean(this.props.animate);
    }
  }, {
    key: "renderComponents",
    value: function renderComponents(props) {
      var _this = this;

      var shouldRenderDatum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : datumHasXandY;
      var dataComponent = props.dataComponent,
          labelComponent = props.labelComponent,
          groupComponent = props.groupComponent,
          labelIndicator = props.labelIndicator,
          labelPosition = props.labelPosition;

      if (!groupComponent) {
        throw new Error("VictoryPie expects a groupComponent prop");
      }

      var showIndicator = labelIndicator && labelPosition === "centroid";
      var children = [];

      if (dataComponent) {
        var dataComponents = this.dataKeys.reduce(function (validDataComponents, _dataKey, index) {
          var dataProps = _this.getComponentProps(dataComponent, "data", index);

          if (shouldRenderDatum(dataProps.datum)) {
            validDataComponents.push( /*#__PURE__*/_react.default.cloneElement(dataComponent, dataProps));
          }

          return validDataComponents;
        }, []);
        children.push.apply(children, _toConsumableArray(dataComponents));
      }

      if (labelComponent) {
        var labelComponents = this.dataKeys.map(function (_dataKey, index) {
          var labelProps = _this.getComponentProps(labelComponent, "labels", index);

          if (labelProps.text !== undefined && labelProps.text !== null) {
            return /*#__PURE__*/_react.default.cloneElement(labelComponent, labelProps);
          }

          return undefined;
        }).filter(function (comp) {
          return comp !== undefined;
        });
        children.push.apply(children, _toConsumableArray(labelComponents));
      }

      if (showIndicator && labelIndicator) {
        var labelIndicatorComponent = /*#__PURE__*/_react.default.createElement(_victoryCore.LineSegment, null);

        if (typeof labelIndicator === "object") {
          // pass user provided react component
          labelIndicatorComponent = labelIndicator;
        }

        var labelIndicatorComponents = this.dataKeys.map(function (_dataKey, index) {
          var labelIndicatorProps = _this.getComponentProps(labelIndicatorComponent, "labelIndicators", index);

          return /*#__PURE__*/_react.default.cloneElement(labelIndicatorComponent, labelIndicatorProps);
        });
        children.push.apply(children, _toConsumableArray(labelIndicatorComponents));
      }

      return this.renderContainer(groupComponent, children);
    }
  }, {
    key: "render",
    value: function render() {
      var animationWhitelist = VictoryPie.animationWhitelist,
          role = VictoryPie.role;

      var props = _victoryCore.Helpers.modifyProps(this.props, fallbackProps, role);

      if (this.shouldAnimate()) {
        return this.animateComponent(props, animationWhitelist);
      }

      var children = this.renderComponents(props);
      var component = props.standalone ? this.renderContainer(props.containerComponent, children) : children;
      return _victoryCore.UserProps.withSafeUserProps(component, props);
    }
  }]);

  return VictoryPieBase;
}(_react.default.Component);

VictoryPieBase.animationWhitelist = ["data", "endAngle", "height", "innerRadius", "cornerRadius", "padAngle", "padding", "colorScale", "startAngle", "style", "width"];
VictoryPieBase.displayName = "VictoryPie";
VictoryPieBase.role = "pie";
VictoryPieBase.defaultTransitions = {
  onExit: {
    duration: 500,
    before: function () {
      return {
        _y: 0,
        label: " "
      };
    }
  },
  onEnter: {
    duration: 500,
    before: function () {
      return {
        _y: 0,
        label: " "
      };
    },
    after: function (datum) {
      return {
        y_: datum._y,
        label: datum.label
      };
    }
  }
};
VictoryPieBase.defaultProps = {
  data: [{
    x: "A",
    y: 1
  }, {
    x: "B",
    y: 2
  }, {
    x: "C",
    y: 3
  }, {
    x: "D",
    y: 1
  }, {
    x: "E",
    y: 2
  }],
  standalone: true,
  dataComponent: /*#__PURE__*/_react.default.createElement(_slice.Slice, null),
  labelComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.VictoryLabel, null),
  containerComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.VictoryContainer, null),
  groupComponent: /*#__PURE__*/_react.default.createElement("g", null),
  sortOrder: "ascending",
  theme: _victoryCore.VictoryTheme.grayscale
};

VictoryPieBase.getBaseProps = function (props) {
  return (0, _helperMethods.getBaseProps)(props, fallbackProps);
};

VictoryPieBase.getData = _victoryCore.Data.getData;
VictoryPieBase.expectedComponents = ["dataComponent", "labelComponent", "groupComponent", "containerComponent", "labelIndicatorComponent"];
var VictoryPie = (0, _victoryCore.addEvents)(VictoryPieBase);
exports.VictoryPie = VictoryPie;