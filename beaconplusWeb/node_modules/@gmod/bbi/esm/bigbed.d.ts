import AbortablePromiseCache from 'abortable-promise-cache';
import { BBI, Feature, RequestOptions } from './bbi';
interface Index {
    type: number;
    fieldcount: number;
    offset: number;
    field: number;
}
export declare function filterUndef<T>(ts: (T | undefined)[]): T[];
export declare class BigBed extends BBI {
    readIndicesCache: AbortablePromiseCache<RequestOptions, Index[]>;
    readIndices(opts?: RequestOptions): Promise<Index[]>;
    protected getView(_scale: number, opts?: RequestOptions): Promise<import("./block-view").BlockView>;
    private _readIndices;
    private searchExtraIndexBlocks;
    searchExtraIndex(name: string, opts?: RequestOptions): Promise<Feature[]>;
}
export {};
