/// <reference types="node" />
import { Buffer } from 'buffer';
interface VirtualOffset {
    blockPosition: number;
    dataPosition: number;
}
interface Chunk {
    minv: VirtualOffset;
    maxv: VirtualOffset;
}
declare function unzip(inputData: Buffer): Promise<Buffer>;
declare function unzipChunk(inputData: Buffer): Promise<{
    buffer: Buffer;
    cpositions: number[];
    dpositions: number[];
}>;
declare function unzipChunkSlice(inputData: Buffer, chunk: Chunk): Promise<{
    buffer: Buffer;
    cpositions: number[];
    dpositions: number[];
}>;
declare function nodeUnzip(): void;
export { unzip, unzipChunk, unzipChunkSlice, unzip as pakoUnzip, nodeUnzip };
