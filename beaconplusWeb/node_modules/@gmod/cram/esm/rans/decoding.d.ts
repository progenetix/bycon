declare class FC {
    constructor();
}
declare class AriDecoder {
    constructor();
}
declare class Symbol {
    constructor();
}
declare function symbolInit(sym: any, start: any, freq: any): void;
declare function advanceStep(r: any, start: any, freq: any, scaleBits: any): number;
declare function advanceSymbolStep(r: any, sym: any, scaleBits: any): number;
declare function get(/* final int */ r: any, /* final int */ scaleBits: any): number;
declare function advanceSymbol(r: any, pptr: any, sym: any, scaleBits: any): any;
declare function renormalize(r: any, pptr: any): any;
declare const Decode: {
    FC: typeof FC;
    AriDecoder: typeof AriDecoder;
    Symbol: typeof Symbol;
    symbolInit: typeof symbolInit;
    advanceStep: typeof advanceStep;
    advanceSymbolStep: typeof advanceSymbolStep;
    get: typeof get;
    advanceSymbol: typeof advanceSymbol;
    renormalize: typeof renormalize;
};
export default Decode;
